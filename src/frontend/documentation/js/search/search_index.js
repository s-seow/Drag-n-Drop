var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddUserComponent.html",[0,0.016,1,0.505]],["body/components/AddUserComponent.html",[0,0.021,1,0.728,2,0.801,3,0.197,4,0.167,5,0.584,6,0.584,7,0.584,8,0.167,9,4.954,10,3.811,11,1.879,12,0.953,13,1.355,14,0.584,15,1.559,16,1.428,17,1.235,18,1.351,19,0.874,20,3.38,21,0.874,22,3.38,23,0.228,24,0.439,25,2.009,26,2.93,27,1.331,28,1.164,29,0.731,30,3.659,31,3.38,32,1.842,33,2.166,34,2.133,35,1.505,36,1.505,37,1.231,38,3.254,39,1.231,40,1.231,41,0.293,42,0.822,43,1.692,44,1.754,45,1.035,46,1.355,47,1.639,48,0.679,49,2.256,50,0.585,51,0.034,52,0.51,53,0.544,54,0.585,55,0.822,56,1.639,57,0.822,58,1.639,59,3.38,60,3.38,61,0.741,62,2.256,63,1.168,64,2.256,65,1.309,66,2.166,67,2.256,68,1.631,69,2.256,70,2.256,71,2.256,72,1.231,73,0.822,74,1.231,75,2.256,76,2.256,77,2.256,78,2.256,79,1.298,80,1.298,81,2.256,82,0.682,83,0.822,84,0.328,85,0.822,86,1.608,87,0.534,88,0.584,89,1.175,90,0.822,91,1.631,92,1.175,93,0.197,94,0.035,95,0.488,96,1.143,97,0.977,98,1.879,99,1.879,100,1.382,101,1.631,102,2.444,103,1.631,104,0.822,105,0.822,106,0.822,107,1.247,108,1.446,109,1.631,110,2.256,111,2.256,112,1.278,113,3.38,114,2.557,115,3.38,116,2.256,117,2.256,118,2.444,119,1.879,120,2.256,121,2.256,122,3.38,123,3.38,124,2.256,125,2.256,126,2.256,127,1.631,128,1.298,129,1.446,130,1.554,131,1.446,132,1.631,133,1.631,134,1.446,135,2.166,136,1.631,137,2.256,138,1.446,139,1.879,140,1.879,141,1.476,142,1.879,143,0.895,144,2.256,145,2.256,146,0.977,147,0.801,148,1.879,149,0.754,150,1.231,151,0.822,152,0.822,153,0.822,154,1.231,155,1.755,156,1.231,157,0.822,158,1.949,159,2.815,160,2.133,161,2.815,162,4.5,163,0.953,164,1.038,165,0.874,166,0.488,167,0.874,168,0.874,169,0.584,170,0.584,171,0.584,172,0.404,173,0.584,174,0.365,175,0.584,176,0.365,177,0.584,178,0.365,179,0.731,180,0.584,181,0.365,182,1.048,183,0.365,184,0.534,185,0.365,186,0.534,187,0.874,188,0.404,189,0.534,190,0.584,191,0.365,192,0.584,193,0.365,194,0.547,195,0.584,196,0.365,197,0.365,198,0.488,199,0.584,200,0.365,201,0.404,202,0.365,203,0.584,204,0.584,205,0.017,206,0.017]],["title/components/AppComponent.html",[0,0.016,172,0.559]],["body/components/AppComponent.html",[0,0.028,1,0.64,2,1.18,3,0.345,4,0.293,5,1.023,6,1.023,7,1.023,8,0.293,14,1.023,15,1.672,16,1.531,17,0.856,19,1.289,21,1.289,23,0.399,24,0.647,28,1.023,48,0.455,51,0.033,52,0.503,53,0.399,61,0.514,79,2.275,80,2.275,82,0.514,84,0.575,93,0.345,94,0.062,107,1.481,147,0.937,166,0.856,167,1.289,168,1.289,169,1.023,170,1.023,171,1.023,172,1.025,173,1.023,174,0.64,175,1.023,176,0.64,177,1.023,178,0.64,179,1.078,180,1.023,181,0.64,182,1.411,183,0.64,184,0.937,185,0.64,186,0.937,187,1.289,188,0.708,189,0.937,190,1.023,191,0.64,192,1.023,193,0.64,194,0.806,195,1.023,196,0.64,197,0.64,198,0.856,199,1.023,200,0.64,201,0.708,202,0.64,203,1.023,204,1.023,205,0.026,206,0.026,207,3.294,208,3.194,209,4.982,210,4.982,211,2.363,212,4.15,213,3.954]],["title/modules/AppModule.html",[214,1.999,215,1.999]],["body/modules/AppModule.html",[1,0.91,3,0.269,4,0.229,8,0.229,10,1.978,16,0.731,51,0.034,82,0.828,84,0.449,93,0.269,94,0.048,128,1.776,165,0.798,166,0.668,172,1.097,174,0.91,176,0.91,178,0.91,181,0.91,183,0.91,185,0.91,188,1.007,191,0.91,193,0.91,196,0.91,197,0.91,200,0.91,201,0.553,202,0.91,205,0.022,206,0.022,214,1.978,215,4.189,216,1.776,217,1.978,218,4.024,219,4.024,220,4.024,221,2.232,222,2.571,223,2.571,224,2.571,225,2.571,226,2.571,227,3.237,228,3.237,229,3.526,230,3.086,231,3.526,232,3.526,233,4.233,234,2.571,235,1.978,236,3.086,237,3.086,238,2.571,239,2.232,240,2.571,241,4.233,242,3.086,243,3.086,244,2.571,245,4.233,246,4.233,247,1.776,248,3.526,249,1.978,250,4.024,251,2.571,252,1.978,253,2.571,254,1.978,255,2.571,256,2.571,257,1.978,258,3.526,259,1.978,260,1.978,261,2.571,262,2.232,263,3.086,264,2.571,265,1.978,266,3.526,267,2.571,268,1.978,269,2.571,270,2.571,271,2.571,272,1.978,273,2.571,274,2.571,275,2.571,276,3.086,277,3.086,278,3.086]],["title/modules/AppRoutingModule.html",[214,1.999,227,1.795]],["body/modules/AppRoutingModule.html",[0,0.033,1,0.742,3,0.304,4,0.258,8,0.258,10,2.23,17,0.753,51,0.034,82,0.827,84,0.506,87,0.824,93,0.304,94,0.055,112,0.824,147,1.087,174,0.742,176,0.742,178,0.742,179,0.993,181,0.742,183,0.742,184,0.824,185,0.742,186,0.824,188,0.919,189,1.087,191,0.742,193,0.742,194,0.742,196,0.742,197,0.742,198,0.993,200,0.742,201,0.623,202,0.742,205,0.024,206,0.024,216,2.002,221,2.515,227,2.64,231,2.898,232,3.821,238,2.898,239,2.515,240,2.898,244,2.898,248,3.821,249,2.23,250,4.276,251,2.898,252,2.23,253,2.898,254,2.23,255,2.898,256,2.898,257,2.23,258,3.821,259,2.23,260,2.23,261,2.898,264,2.898,265,2.23,266,3.821,267,2.898,268,2.23,269,2.898,270,2.898,271,2.898,272,2.23,273,2.898,274,2.898,275,2.898,279,3.478,280,3.478,281,4.587,282,3.29,283,6.361,284,3.478,285,2.002,286,3.478,287,4.587,288,3.478,289,3.478,290,3.478,291,3.478,292,3.478,293,2.389,294,1.812,295,3.478,296,3.478,297,3.478,298,3.478,299,3.478]],["title/components/AssignComponent.html",[0,0.016,174,0.505]],["body/components/AssignComponent.html",[0,0.021,1,0.383,2,0.83,3,0.207,4,0.176,5,0.613,6,0.613,7,0.613,8,0.176,12,0.988,13,1.395,14,0.613,15,1.571,16,1.439,17,0.513,18,1.447,19,0.906,21,0.906,23,0.239,24,0.455,25,1.791,26,3.016,27,1.296,28,1.192,29,0.758,32,1.875,35,1.541,36,1.541,37,1.276,38,3.333,39,1.276,40,1.276,41,0.308,42,0.862,43,1.722,44,1.782,45,1.051,46,1.395,47,1.678,48,0.679,50,0.542,51,0.034,52,0.496,53,0.552,54,0.542,55,0.862,56,1.678,57,0.862,58,1.678,61,0.711,63,1.115,65,1.332,72,1.276,73,0.862,74,1.276,79,1.363,80,1.363,82,0.693,83,0.862,84,0.345,85,0.862,86,1.655,87,0.561,88,0.613,89,1.233,90,0.862,93,0.207,94,0.037,95,0.513,96,1.176,97,1.026,100,1.416,101,1.712,102,2.534,103,1.712,104,0.862,105,0.862,106,0.862,107,1.272,108,1.518,109,1.712,112,1.262,129,2.246,130,1.746,131,2.246,134,2.246,135,2.954,146,1.026,147,0.83,149,0.792,150,1.276,151,0.862,152,0.862,153,0.862,154,1.276,155,1.791,156,1.276,157,0.862,163,0.988,164,1.076,165,0.906,166,0.513,167,0.906,168,0.906,169,0.613,170,0.613,171,0.613,172,0.424,173,0.613,174,0.746,175,0.613,176,0.383,177,0.613,178,0.383,179,0.758,180,0.613,181,0.383,182,1.079,183,0.383,184,0.561,185,0.383,186,0.561,187,0.906,188,0.424,189,0.561,190,0.613,191,0.383,192,0.613,193,0.383,194,0.567,195,0.613,196,0.383,197,0.383,198,0.513,199,0.613,200,0.383,201,0.424,202,0.383,203,0.613,204,0.613,205,0.018,206,0.018,300,1.973,301,5.685,302,3.504,303,3.504,304,1.977,305,1.941,306,3.504,307,3.504,308,3.504,309,3.504,310,2.368,311,2.368,312,2.368,313,2.368,314,2.368,315,2.368,316,2.368,317,2.368,318,2.368,319,1.233,320,2.016,321,1.233,322,1.518,323,1.518,324,1.518,325,1.518,326,1.973,327,2.368,328,4.17,329,4.17,330,3.504,331,3.333,332,3.504,333,3.504,334,2.534,335,3.504,336,2.919,337,2.368,338,2.368,339,2.368,340,2.368,341,2.368,342,2.368,343,2.368,344,2.368,345,2.683,346,2.919,347,2.919,348,3.84,349,3.504]],["title/injectables/AuthService.html",[45,0.615,350,1.625]],["body/injectables/AuthService.html",[3,0.168,4,0.143,8,0.143,18,1.125,23,0.194,27,1.4,29,0.795,33,1.917,35,1.385,41,0.25,44,1.659,45,0.59,48,0.675,50,0.7,51,0.034,52,0.543,53,0.543,54,0.7,61,0.837,63,1.338,65,1.071,66,1.917,82,0.583,84,0.28,87,0.455,92,1.001,93,0.168,94,0.03,95,0.416,96,1.446,108,3.179,141,2.101,143,1.644,165,0.774,194,0.769,201,0.742,205,0.015,206,0.015,208,1.232,235,3.571,247,1.106,262,1.39,293,2.805,294,3.163,350,1.558,351,1.39,352,1.602,353,1.917,354,2.991,355,4.142,356,4.142,357,4.142,358,4.142,359,3.45,360,2.991,361,4.142,362,2.492,363,2.991,364,2.991,365,3.45,366,1.922,367,2.655,368,2.655,369,3.45,370,1.922,371,2.991,372,1.917,373,1.922,374,2.995,375,3.377,376,4.142,377,1.922,378,2.991,379,1.922,380,2.492,381,1.74,382,2.991,383,2.492,384,4.486,385,1.922,386,4.889,387,4.535,388,5.712,389,5.571,390,1.922,391,4.641,392,1.922,393,1.922,394,4.029,395,1.922,396,2.991,397,1.922,398,2.991,399,2.492,400,1.922,401,1.922,402,2.991,403,2.991,404,2.492,405,1.922,406,2.991,407,4.142,408,2.991,409,1.922,410,2.163,411,2.991,412,1.922,413,2.492,414,5.485,415,2.991,416,5.129,417,1.922,418,2.991,419,2.492,420,1.922,421,1.922,422,3.671,423,1.602,424,3.45,425,1.39,426,1.922,427,2.991,428,1.922,429,1.922,430,1.922,431,4.173,432,1.922,433,2.991,434,3.671,435,1.922,436,1.922,437,1.602,438,2.991,439,4.142,440,1.922,441,1.922,442,1.922,443,1.922,444,1.602,445,1.922,446,1.922,447,1.922,448,1.922,449,1.922,450,2.991,451,3.671,452,1.922,453,3.671,454,1.922,455,1.922,456,2.991,457,1.922,458,1.602,459,1.602,460,1.922,461,1.001,462,1.922,463,1.602,464,1.922,465,1.922,466,1.922,467,1.922,468,1.922,469,1.922]],["title/classes/Board.html",[25,1.136,94,0.049]],["body/classes/Board.html",[3,0.387,4,0.329,8,0.329,23,0.447,24,0.694,25,1.946,41,0.694,48,0.686,50,0.576,51,0.033,52,0.447,53,0.601,54,0.576,61,0.822,82,0.576,93,0.387,94,0.07,205,0.028,206,0.028,211,2.642,461,3.103,470,2.307,471,3.691,472,3.663,473,6.099,474,2.549,475,3.176,476,4.43,477,4.43,478,4.43,479,4.43,480,4.43]],["title/classes/Column.html",[94,0.049,475,1.625]],["body/classes/Column.html",[3,0.366,4,0.312,8,0.312,23,0.424,24,0.672,41,0.672,48,0.704,50,0.546,51,0.033,52,0.424,53,0.617,54,0.546,61,0.833,82,0.546,93,0.366,94,0.066,205,0.027,206,0.027,211,2.602,305,2.188,461,3.047,470,2.187,472,3.724,474,2.416,475,2.694,481,3.498,482,6.008,483,5.005,484,6.008,485,3.75,486,4.199,487,4.199,488,4.199,489,4.199,490,4.199,491,4.199,492,4.199]],["title/classes/Comment.html",[94,0.049,493,1.999]],["body/classes/Comment.html",[3,0.36,4,0.306,8,0.306,23,0.416,24,0.665,27,1.416,41,0.665,48,0.711,50,0.536,51,0.033,52,0.416,53,0.623,54,0.536,61,0.848,93,0.36,94,0.065,205,0.026,206,0.026,461,3.028,470,2.148,472,3.743,474,2.374,493,3.279,494,3.436,495,5.977,496,5.977,497,3.62,498,4.979,499,4.125,500,4.125,501,4.125,502,4.125,503,4.125,504,4.125,505,4.125]],["title/components/CommentsComponent.html",[0,0.016,176,0.505]],["body/components/CommentsComponent.html",[0,0.022,1,0.399,2,0.855,3,0.215,4,0.183,5,0.638,6,0.638,7,0.638,8,0.183,12,1.018,13,1.428,14,0.638,15,1.581,16,1.447,17,0.534,18,0.584,19,0.934,21,0.934,23,0.249,24,0.469,25,1.314,27,1.185,28,0.638,29,0.781,35,1.572,36,1.572,37,1.314,39,1.314,40,1.314,41,0.32,42,0.898,43,1.747,44,1.805,45,1.065,46,1.428,47,1.711,48,0.67,50,0.555,51,0.034,52,0.505,53,0.545,54,0.555,55,0.898,56,1.711,57,0.898,58,1.711,61,0.701,63,1.083,65,1.294,72,1.314,73,0.898,74,1.314,82,0.719,83,0.898,84,0.359,85,0.898,86,1.694,87,0.584,88,0.638,90,0.898,93,0.215,94,0.039,95,0.534,96,1.204,97,1.068,100,1.443,104,0.898,105,1.314,106,0.898,107,1.216,112,1.011,130,1.109,146,1.068,147,0.855,149,0.825,150,1.314,151,0.898,152,0.898,153,0.898,154,1.314,155,1.821,156,1.314,157,0.898,163,1.018,164,1.109,165,0.934,166,0.534,167,0.934,168,0.934,169,0.638,170,0.638,171,0.638,172,0.441,173,0.638,174,0.399,175,0.638,176,0.761,177,0.638,178,0.399,179,0.781,180,0.638,181,0.399,182,1.104,183,0.399,184,0.584,185,0.399,186,0.584,187,0.934,188,0.441,189,0.584,190,0.638,191,0.399,192,0.638,193,0.399,194,0.691,195,0.638,196,0.399,197,0.399,198,0.534,199,0.638,200,0.399,201,0.441,202,0.399,203,0.638,204,0.638,205,0.019,206,0.019,211,1.564,304,2.024,305,1.966,319,1.284,320,2.077,321,1.284,322,1.58,323,1.58,324,1.58,325,1.58,345,1.88,347,3.007,348,3.007,381,1.711,493,3.62,497,2.077,498,3.007,506,2.054,507,5.647,508,3.609,509,3.609,510,4.699,511,3.609,512,3.609,513,2.466,514,3.609,515,2.466,516,2.466,517,2.466,518,2.466,519,2.466,520,2.466,521,2.466,522,2.054,523,1.783,524,2.466,525,3.609,526,2.466,527,2.466,528,2.466,529,1.58,530,3.609,531,3.398,532,3.609,533,3.609,534,2.466,535,2.466,536,2.466,537,2.466,538,3.007,539,3.609,540,3.609,541,2.61,542,3.609,543,3.609,544,3.609,545,3.609,546,3.609,547,3.609,548,3.609]],["title/components/DeleteBoardComponent.html",[0,0.016,178,0.505]],["body/components/DeleteBoardComponent.html",[0,0.022,1,0.405,2,0.863,3,0.218,4,0.185,5,0.646,6,0.646,7,0.646,8,0.185,12,1.028,13,1.439,14,0.646,15,1.584,16,1.45,17,0.541,18,0.592,19,0.943,21,0.943,23,0.252,24,0.474,25,2.169,27,1.191,28,0.646,29,0.789,32,1.912,35,1.582,36,1.582,37,1.327,39,1.327,40,1.327,41,0.325,42,0.91,43,1.756,44,1.813,45,1.069,46,1.439,47,1.722,48,0.671,50,0.615,51,0.034,52,0.53,53,0.53,54,0.615,55,0.91,56,1.722,57,0.91,58,1.722,61,0.615,63,1.173,65,1.402,72,1.327,73,0.91,74,1.327,82,0.722,83,0.91,84,0.364,85,0.91,86,1.708,87,0.592,88,0.646,89,1.302,90,0.91,93,0.218,94,0.039,95,0.541,96,1.213,97,1.083,98,2.082,99,2.082,100,1.453,104,0.91,105,0.91,106,0.91,107,1.301,112,0.592,130,1.12,146,1.083,147,0.863,148,2.082,149,0.836,150,1.327,151,0.91,152,0.91,153,0.91,154,1.327,155,1.831,156,1.327,157,0.91,163,1.028,164,1.12,165,0.943,166,0.541,167,0.943,168,0.943,169,0.646,170,0.646,171,0.646,172,0.447,173,0.646,174,0.405,175,0.646,176,0.405,177,0.646,178,0.766,179,1.3,180,0.646,181,0.405,182,1.113,183,0.405,184,0.592,185,0.405,186,0.592,187,0.943,188,0.447,189,0.592,190,0.646,191,0.405,192,0.646,193,0.405,194,0.59,195,0.646,196,0.405,197,0.405,198,0.541,199,0.646,200,0.405,201,0.447,202,0.405,203,0.646,204,0.646,205,0.019,206,0.019,260,3.782,285,1.438,304,1.185,305,0.91,319,1.302,345,1.302,475,2.823,549,4.266,550,2.082,551,3.645,552,3.645,553,3.645,554,4.73,555,3.645,556,3.645,557,3.645,558,2.499,559,2.499,560,2.499,561,2.499,562,2.499,563,2.499,564,3.645,565,2.499,566,2.499,567,2.082,568,2.499,569,2.499,570,2.499,571,4.303,572,2.499,573,3.645,574,3.645,575,2.499,576,2.499,577,3.645,578,2.499,579,3.645,580,2.499,581,2.499,582,2.499,583,2.499,584,2.499,585,2.499,586,2.636,587,3.645]],["title/components/DeleteTaskComponent.html",[0,0.016,181,0.505]],["body/components/DeleteTaskComponent.html",[0,0.023,1,0.439,2,0.917,3,0.237,4,0.201,5,0.702,6,0.702,7,0.702,8,0.201,12,1.091,13,1.508,14,0.702,15,1.602,16,1.467,17,0.588,18,0.643,19,1.001,21,1.001,23,0.274,24,0.503,27,1.231,28,0.702,29,0.838,32,1.967,35,1.644,36,1.644,37,1.409,39,1.409,40,1.409,41,0.353,42,0.989,43,1.806,44,1.859,45,1.096,46,1.508,47,1.79,48,0.675,50,0.503,51,0.034,52,0.496,53,0.524,54,0.503,55,0.989,56,1.79,57,0.989,58,1.79,61,0.639,63,1.124,65,1.344,72,1.409,73,0.989,74,1.409,82,0.702,83,0.989,84,0.395,85,0.989,86,1.789,87,0.643,88,0.702,90,0.989,93,0.237,94,0.043,95,0.588,96,1.272,97,1.176,100,1.189,104,0.989,105,0.989,106,0.989,107,1.271,112,0.643,130,1.189,146,1.676,147,1.068,149,0.908,150,1.409,151,0.989,152,0.989,153,0.989,154,1.409,155,1.892,156,1.409,157,0.989,163,1.091,164,1.189,165,1.001,166,0.588,167,1.001,168,1.001,169,0.702,170,0.702,171,0.702,172,0.486,173,0.702,174,0.439,175,0.702,176,0.439,177,0.702,178,0.439,179,1.318,180,0.702,181,0.795,182,1.166,183,0.439,184,0.643,185,0.439,186,0.643,187,1.001,188,0.486,189,0.643,190,0.702,191,0.439,192,0.702,193,0.439,194,0.626,195,0.702,196,0.439,197,0.439,198,0.588,199,0.702,200,0.439,201,0.486,202,0.439,203,0.702,204,0.702,205,0.02,206,0.02,259,3.804,304,2.138,305,2.024,319,1.414,320,2.595,321,1.414,322,1.741,323,1.741,324,1.741,325,1.741,345,2.813,538,3.224,549,4.291,586,2.798,588,1.741,589,2.798,590,2.798,591,4.915,592,3.224,593,3.87,594,2.715,595,2.262,596,2.715,597,2.262,598,2.715,599,2.715,600,2.715,601,2.715]],["title/components/EditTaskComponent.html",[0,0.016,183,0.505]],["body/components/EditTaskComponent.html",[0,0.02,1,0.335,2,0.75,3,0.181,4,0.154,5,0.535,6,0.535,7,0.535,8,0.154,12,0.893,13,1.286,14,0.535,15,1.538,16,1.408,17,0.448,18,0.49,19,0.819,21,0.819,23,0.209,24,0.411,27,1.099,28,0.535,29,0.685,32,1.782,34,2.042,35,1.44,36,1.44,37,1.153,39,1.153,40,1.153,41,0.269,42,0.753,43,1.637,44,1.703,45,1.004,46,1.286,47,1.568,48,0.667,50,0.603,51,0.034,52,0.514,53,0.53,54,0.603,55,0.753,56,1.568,57,0.753,58,1.568,61,0.662,63,1.165,65,1.266,72,1.153,73,0.753,74,1.153,82,0.662,83,0.753,84,0.301,85,0.753,86,1.526,87,0.49,88,0.535,90,0.753,93,0.181,94,0.032,95,0.448,96,1.084,97,0.896,100,0.972,104,0.753,105,0.753,106,0.753,107,1.114,112,1.374,114,2.837,128,1.191,130,0.972,141,1.568,143,1.256,146,1.371,147,0.911,149,0.692,150,1.153,151,0.753,152,0.753,153,0.753,154,1.153,155,1.69,156,1.153,157,0.753,158,2.275,160,2.49,163,0.893,164,0.972,165,0.819,166,0.448,167,0.819,168,0.819,169,0.535,170,0.535,171,0.535,172,0.371,173,0.535,174,0.335,175,0.535,176,0.335,177,0.535,178,0.335,179,0.685,180,0.535,181,0.335,182,0.994,183,0.697,184,1.275,185,0.335,186,0.49,187,0.819,188,0.371,189,0.49,190,0.535,191,0.335,192,0.535,193,0.335,194,0.751,195,0.535,196,0.335,197,0.335,198,0.448,199,0.535,200,0.335,201,0.371,202,0.335,203,0.535,204,0.535,205,0.016,206,0.016,211,1.865,257,3.752,304,1.823,305,1.855,319,1.078,320,2.212,321,1.078,322,1.326,323,1.326,324,1.326,325,1.326,336,1.724,345,2.862,381,1.501,413,4.077,485,2.464,497,3.337,522,3.203,523,1.496,531,3.539,541,2.289,588,1.326,589,2.289,590,2.289,595,1.724,602,4.876,603,2.637,604,2.637,605,3.166,606,3.166,607,2.069,608,2.637,609,2.069,610,3.845,611,2.069,612,2.637,613,3.588,614,2.069,615,3.894,616,1.724,617,2.069,618,2.069,619,1.724,620,1.724,621,1.724,622,1.724,623,1.724,624,1.724,625,1.724,626,1.724,627,1.724,628,2.069,629,2.637,630,2.289,631,2.289,632,1.496,633,1.724,634,2.78,635,2.637,636,2.637,637,1.724,638,1.724,639,3.203,640,2.637,641,2.637,642,1.724,643,1.724,644,3.203,645,3.203,646,2.637,647,1.724,648,2.069,649,1.724,650,1.724,651,1.496,652,1.724,653,1.724,654,1.724,655,2.069,656,2.069,657,2.069,658,2.069,659,2.069,660,1.724,661,1.496,662,2.637,663,1.724,664,3.588,665,1.724,666,1.724,667,2.637,668,3.588,669,2.76,670,2.637,671,2.289,672,2.637,673,2.637,674,3.166]],["title/components/ForgetPasswordComponent.html",[0,0.016,185,0.505]],["body/components/ForgetPasswordComponent.html",[0,0.024,1,0.457,2,0.942,3,0.246,4,0.209,5,0.73,6,0.73,7,0.73,8,0.209,14,0.73,15,1.61,16,1.475,17,0.611,19,1.029,21,1.029,23,0.285,28,1.191,29,0.861,30,3.955,32,1.448,34,2.593,41,0.367,45,1.079,48,0.607,50,0.65,51,0.034,52,0.552,53,0.504,54,0.65,61,0.758,63,1.082,65,0.73,68,2.041,82,0.599,84,0.411,88,0.73,91,2.041,92,1.47,93,0.246,94,0.044,95,0.611,107,1.294,112,1.382,114,2.721,118,2.876,127,2.876,129,1.809,130,1.536,131,1.809,132,2.041,133,2.041,134,1.809,135,2.55,136,2.041,138,1.809,141,1.821,143,1.12,147,0.669,158,2.166,159,3.314,160,2.371,163,1.122,166,0.611,167,1.029,168,1.029,169,0.73,170,0.73,171,0.73,172,0.505,173,0.73,174,0.457,175,0.73,176,0.457,177,0.73,178,0.457,179,0.861,180,0.73,181,0.457,182,1.191,183,0.457,184,0.669,185,0.809,186,1.331,187,1.029,188,0.505,189,0.669,190,0.73,191,0.457,192,0.73,193,0.457,194,0.644,195,0.73,196,0.457,197,0.457,198,0.611,199,0.73,200,0.457,201,0.944,202,0.457,203,0.73,204,0.73,205,0.02,206,0.02,265,3.506,293,2.072,294,2.989,331,2.876,334,2.041,353,2.55,372,2.55,375,3.501,380,4.166,675,4.557,676,2.041,677,3.314,678,3.314,679,3.314,680,2.041,681,2.351,682,2.822,683,2.822,684,3.314,685,2.822,686,3.977,687,2.351,688,3.837,689,2.351,690,2.822,691,3.977,692,3.977,693,2.822,694,3.977,695,3.977,696,2.822,697,2.822,698,2.822,699,2.822,700,2.822,701,2.351,702,2.351,703,2.351,704,2.351,705,2.351,706,2.822,707,2.822,708,3.314,709,3.314,710,3.314,711,5.001,712,5.47,713,3.977]],["title/components/LoginComponent.html",[0,0.016,191,0.505]],["body/components/LoginComponent.html",[0,0.02,1,0.34,2,0.758,3,0.183,4,0.156,5,0.543,6,0.543,7,0.543,8,0.156,14,0.543,15,1.541,16,1.412,17,0.454,18,0.497,19,0.828,21,0.828,23,0.212,27,1.281,28,0.543,29,0.693,30,3.91,33,2.052,34,2.057,41,0.273,44,1.712,45,0.971,48,0.607,50,0.665,51,0.034,52,0.545,53,0.516,54,0.665,61,0.815,63,1.108,65,0.828,66,2.052,68,2.315,82,0.607,84,0.306,87,0.497,88,0.543,91,1.518,92,1.094,93,0.183,94,0.033,95,0.454,96,0.592,100,0.645,107,1.122,112,1.449,114,2.973,118,3.138,119,1.749,127,1.518,138,2.052,139,2.667,140,1.749,141,1.58,142,1.749,143,1.539,147,0.497,158,2.542,160,2.757,161,3.615,163,0.903,164,0.645,166,0.454,167,0.828,168,0.828,169,0.543,170,0.543,171,0.543,172,0.376,173,0.543,174,0.34,175,0.543,176,0.34,177,0.543,178,0.34,179,0.693,180,0.543,181,0.34,182,1.003,183,0.34,184,0.497,185,0.34,186,0.497,187,0.828,188,0.376,189,0.497,190,0.543,191,0.702,192,0.543,193,0.34,194,0.518,195,0.543,196,0.34,197,0.34,198,0.454,199,0.543,200,0.34,201,0.376,202,0.34,203,0.543,204,0.543,205,0.016,206,0.016,247,1.208,285,1.842,293,2.749,294,2.998,353,2.052,372,2.052,374,2.315,375,3.227,383,3.615,424,3.232,444,3.615,529,1.346,669,2.052,679,2.667,680,1.518,684,2.667,688,3.232,689,1.749,701,1.749,702,1.749,703,1.749,704,1.749,705,1.749,708,2.667,709,2.667,710,2.667,714,1.749,715,3.201,716,3.201,717,2.667,718,3.201,719,3.201,720,2.1,721,2.1,722,2.1,723,2.1,724,2.667,725,2.1,726,2.1,727,3.201,728,2.1,729,3.201,730,3.891,731,3.891,732,2.1,733,3.879,734,3.879,735,3.201,736,2.1,737,2.1,738,3.201,739,3.201,740,2.667,741,3.201,742,3.201,743,2.1,744,2.1,745,3.201,746,3.201,747,2.1,748,2.1,749,3.201,750,3.201,751,2.1,752,3.201,753,3.201,754,2.1,755,1.749,756,2.667,757,2.667,758,1.749,759,2.667,760,2.667,761,1.749,762,3.879,763,2.1,764,2.1,765,2.1,766,2.1,767,2.1,768,2.1,769,1.749,770,1.749,771,2.1,772,2.667,773,2.667,774,2.667,775,2.667,776,1.749,777,2.667,778,1.749,779,3.232,780,3.201,781,3.201,782,4.339,783,2.667,784,2.667,785,2.667,786,2.667,787,2.667,788,2.667,789,2.667,790,2.667,791,2.667,792,3.201,793,2.667,794,3.201,795,3.201,796,3.201,797,3.201,798,3.201]],["title/components/NewProjectComponent.html",[0,0.016,193,0.505]],["body/components/NewProjectComponent.html",[0,0.023,1,0.427,2,0.898,3,0.23,4,0.196,5,0.682,6,0.682,7,0.682,8,0.196,12,1.069,13,1.484,14,0.682,15,1.596,16,1.461,17,0.571,18,0.625,19,0.98,21,0.98,23,0.266,24,0.493,25,1.766,27,1.217,28,0.682,29,0.82,32,1.38,34,2.299,35,1.622,36,1.622,37,1.38,39,1.38,40,1.38,41,0.343,42,0.96,43,1.789,44,1.843,45,1.087,48,0.661,50,0.63,51,0.034,52,0.54,53,0.518,54,0.63,55,0.96,56,1.766,57,0.96,58,1.766,61,0.733,63,1.158,65,1.383,72,1.38,73,0.96,74,1.38,82,0.695,83,0.96,84,0.384,85,0.96,87,0.625,88,0.682,89,1.374,90,0.96,93,0.23,94,0.041,95,0.571,96,1.069,100,1.164,104,0.96,105,0.96,106,0.96,107,1.255,112,1.149,114,2.299,130,1.164,147,0.625,149,0.882,150,1.38,151,0.96,152,0.96,153,0.96,154,1.38,155,1.871,156,1.38,157,0.96,158,1.642,160,1.797,163,1.069,164,1.164,165,0.98,166,0.571,167,0.98,168,0.98,169,0.682,170,0.682,171,0.682,172,0.472,173,0.682,174,0.427,175,0.682,176,0.427,177,0.682,178,0.427,179,0.82,180,0.682,181,0.427,182,1.148,183,0.427,184,0.625,185,0.427,186,0.625,187,0.98,188,0.472,189,0.898,190,0.682,191,0.427,192,0.682,193,0.785,194,0.943,195,0.682,196,0.427,197,0.427,198,1.112,199,0.682,200,0.427,201,0.472,202,0.427,203,0.682,204,0.682,205,0.02,206,0.02,211,2.101,254,3.736,285,1.518,304,1.25,410,1.907,615,2.741,630,2.741,631,2.741,632,1.907,651,1.907,740,2.197,799,4.214,800,2.197,801,3.79,802,3.79,803,3.79,804,3.79,805,2.637,806,3.79,807,2.637,808,3.79,809,2.637,810,3.79,811,2.637,812,2.637,813,2.637,814,2.637,815,2.637,816,2.637,817,2.637,818,2.637,819,4.85,820,2.637,821,2.637,822,2.637,823,2.637,824,2.637,825,2.637,826,2.637,827,2.637,828,3.109]],["title/components/NewTaskComponent.html",[0,0.016,196,0.505]],["body/components/NewTaskComponent.html",[0,0.02,1,0.341,2,0.761,3,0.184,4,0.156,5,0.545,6,0.545,7,0.545,8,0.156,12,0.906,13,1.301,14,0.545,15,1.542,16,1.413,17,0.456,18,0.499,19,0.831,21,0.831,23,0.213,24,0.417,27,1.108,28,0.545,29,0.695,32,1.795,34,2.061,35,1.454,36,1.454,37,1.169,39,1.169,40,1.169,41,0.274,42,0.768,43,1.649,44,1.714,45,1.011,46,1.301,47,1.583,48,0.663,50,0.565,51,0.034,52,0.497,53,0.517,54,0.565,55,0.768,56,1.583,57,0.768,58,1.583,61,0.666,63,1.144,65,1.275,72,1.169,73,0.768,74,1.169,82,0.666,83,0.768,84,0.307,85,0.768,86,1.543,87,0.499,88,0.545,90,0.768,93,0.184,94,0.033,95,0.456,96,1.097,97,0.913,100,1.195,104,0.768,105,0.768,106,0.768,107,1.125,112,1.379,114,2.845,128,1.213,130,0.986,141,1.416,143,1.274,146,1.391,147,0.921,149,0.705,150,1.169,151,0.768,152,0.768,153,0.768,154,1.169,155,1.704,156,1.169,157,0.768,158,2.289,160,2.505,163,0.906,164,0.986,165,0.831,166,0.456,167,0.831,168,0.831,169,0.545,170,0.545,171,0.545,172,0.377,173,0.545,174,0.341,175,0.545,176,0.341,177,0.545,178,0.341,179,0.695,180,0.545,181,0.341,182,1.006,183,0.341,184,0.499,185,0.341,186,0.499,187,0.831,188,0.377,189,0.499,190,0.545,191,0.341,192,0.545,193,0.341,194,0.942,195,0.545,196,0.704,197,0.341,198,0.456,199,0.545,200,0.341,201,0.377,202,0.341,203,0.545,204,0.545,205,0.017,206,0.017,211,1.884,249,3.731,304,1.844,305,1.169,319,1.098,320,2.238,321,1.098,345,2.876,381,1.522,475,2.67,485,2.493,497,3.177,531,3.565,541,2.322,567,1.756,588,1.351,589,2.322,590,2.322,592,1.756,597,1.756,603,2.675,604,2.675,608,2.675,612,2.675,613,3.622,615,3.915,616,2.675,619,1.756,620,1.756,621,1.756,622,1.756,623,1.756,624,1.756,625,1.756,626,1.756,627,1.756,629,2.675,630,2.322,631,2.322,632,1.525,633,1.756,634,2.812,635,2.675,636,2.675,637,1.756,638,1.756,639,3.24,640,2.675,641,2.675,642,1.756,643,1.756,644,3.24,645,3.24,646,2.675,647,1.756,649,1.756,650,1.756,651,1.525,652,1.756,653,1.756,654,1.756,660,1.756,661,1.525,662,2.675,663,1.756,664,3.622,665,1.756,666,1.756,667,2.675,668,3.622,669,2.787,670,2.675,671,2.322,672,2.675,673,2.675,799,4.209,828,2.787,829,4.348,830,2.108,831,2.108,832,2.108,833,2.108,834,2.108,835,2.108,836,2.108,837,2.108,838,2.108,839,2.108,840,2.108,841,2.108,842,2.108,843,2.108]],["title/components/ProjectListComponent.html",[0,0.016,197,0.505]],["body/components/ProjectListComponent.html",[0,0.024,1,0.474,2,0.967,3,0.256,4,0.217,5,0.757,6,0.757,7,0.757,8,0.217,12,1.151,13,1.571,14,0.757,15,1.618,16,1.482,17,0.634,18,0.694,19,1.056,21,1.056,23,0.295,24,0.53,25,1.851,27,1.266,28,0.757,29,0.883,35,1.7,36,1.7,37,1.486,39,1.486,40,1.486,41,0.381,42,1.066,43,1.851,45,1.12,46,1.571,47,1.851,48,0.654,50,0.53,51,0.034,52,0.513,53,0.513,54,0.53,55,1.066,56,1.851,57,1.066,58,1.851,61,0.53,63,1.017,65,1.215,72,1.486,73,1.066,74,1.486,82,0.719,83,1.066,84,0.426,85,1.066,87,0.694,88,0.757,89,1.525,90,1.066,93,0.256,94,0.046,95,0.634,96,1.151,100,1.254,104,1.066,105,1.066,106,1.066,107,1.315,112,0.694,130,1.254,147,0.694,149,0.979,150,1.486,151,1.066,152,1.066,153,1.066,154,1.486,155,1.946,156,1.486,157,1.066,163,1.151,164,1.254,165,1.056,166,0.634,167,1.056,168,1.056,169,0.757,170,0.757,171,0.757,172,0.524,173,0.757,174,0.474,175,0.757,176,0.474,177,0.757,178,0.474,179,0.883,180,0.757,181,0.474,182,1.215,183,0.474,184,0.694,185,0.474,186,0.694,187,1.056,188,0.524,189,0.694,190,0.757,191,0.474,192,0.757,193,0.474,194,0.896,195,0.757,196,0.474,197,0.823,198,1.303,199,0.757,200,0.474,201,0.524,202,0.474,203,0.757,204,0.757,205,0.021,206,0.021,252,3.713,285,2.349,828,2.616,844,4.825,845,2.44,846,4.082,847,4.082,848,4.698,849,4.082,850,4.082,851,2.928,852,2.928,853,2.928,854,2.928,855,2.928,856,5.082,857,4.082,858,3.4]],["title/components/ResetPasswordComponent.html",[0,0.016,200,0.505]],["body/components/ResetPasswordComponent.html",[0,0.023,1,0.423,2,0.893,3,0.228,4,0.194,5,0.677,6,0.677,7,0.677,8,0.194,12,1.063,13,1.477,14,0.677,15,1.594,16,1.46,17,0.566,19,0.975,21,0.975,23,0.264,24,0.49,28,0.677,29,0.816,32,1.372,34,2.291,36,1.616,41,0.34,45,1.084,46,1.26,47,1.759,48,0.633,50,0.628,51,0.034,52,0.538,53,0.517,54,0.628,61,0.786,63,1.108,65,1.25,82,0.574,84,0.381,86,1.495,87,0.62,88,0.677,93,0.228,94,0.041,95,0.566,96,0.738,107,1.25,112,1.395,114,2.667,129,1.677,130,1.484,131,1.677,132,1.892,133,1.892,134,1.677,135,2.415,136,1.892,138,1.677,141,1.608,143,1.038,147,0.62,158,2.093,160,2.291,163,1.063,164,1.157,166,0.566,167,0.975,168,0.975,169,0.677,170,0.677,171,0.677,172,0.468,173,0.677,174,0.423,175,0.677,176,0.423,177,0.677,178,0.423,179,0.816,180,0.677,181,0.423,182,1.142,183,0.423,184,0.62,185,0.423,186,0.62,187,0.975,188,0.468,189,0.62,190,0.677,191,0.423,192,0.677,193,0.423,194,0.782,195,0.677,196,0.423,197,0.423,198,0.566,199,0.677,200,0.782,201,1.075,202,0.423,203,0.677,204,0.677,205,0.019,206,0.019,268,3.606,293,1.963,294,3.152,331,2.725,334,1.892,362,3.139,387,3.193,529,1.677,586,2.725,669,2.415,676,1.892,677,3.139,678,3.139,681,2.179,687,2.179,717,3.139,724,3.139,730,3.139,731,4.025,755,2.179,756,3.139,757,3.139,758,2.179,759,3.139,760,3.139,761,2.179,769,2.179,770,2.179,772,3.139,773,3.139,774,3.139,775,3.139,776,2.179,777,3.139,778,2.179,779,3.679,783,3.139,784,3.139,785,3.139,786,3.139,787,3.139,788,3.139,789,3.139,790,3.139,791,3.139,793,3.139,828,2.415,859,4.687,860,2.616,861,2.616,862,2.616,863,3.768,864,2.616,865,3.768,866,2.616,867,2.616,868,2.616,869,3.768,870,2.616,871,2.616,872,2.616,873,2.616,874,2.616,875,2.616,876,2.616,877,2.616,878,2.616,879,3.768,880,3.768,881,3.768]],["title/classes/TaskCard.html",[94,0.049,305,1.136]],["body/classes/TaskCard.html",[3,0.342,4,0.291,8,0.291,23,0.396,24,0.644,41,0.644,48,0.718,50,0.51,51,0.033,52,0.396,53,0.629,54,0.51,61,0.845,93,0.342,94,0.062,143,2.266,205,0.026,206,0.026,211,2.551,305,1.805,381,2.792,461,2.974,470,2.044,472,3.762,474,2.258,483,4.906,485,3.661,497,3.286,882,3.269,883,5.889,884,5.889,885,5.889,886,5.889,887,3.924,888,3.924,889,3.924,890,3.924,891,3.924,892,3.924,893,3.924,894,3.924,895,3.924]],["title/classes/User.html",[18,0.739,94,0.049]],["body/classes/User.html",[3,0.39,4,0.332,8,0.332,18,1.272,23,0.451,24,0.698,27,1.448,41,0.698,48,0.688,50,0.581,51,0.033,52,0.451,53,0.603,54,0.581,61,0.839,93,0.39,94,0.07,205,0.028,206,0.028,375,3.518,461,3.112,470,2.328,472,3.668,474,2.571,896,3.723,897,4.469,898,4.469,899,4.469,900,4.469]],["title/components/ViewUsersComponent.html",[0,0.016,202,0.505]],["body/components/ViewUsersComponent.html",[0,0.023,1,0.436,2,0.911,3,0.235,4,0.2,5,0.696,6,0.696,7,0.696,8,0.2,12,1.085,13,1.501,14,0.696,15,1.6,16,1.465,17,0.583,18,1.227,19,0.995,21,0.995,23,0.272,24,0.5,25,1.634,26,3.245,27,1.227,28,1.466,29,0.833,32,1.783,35,1.637,36,1.637,37,1.401,38,3.54,39,1.401,40,1.401,41,0.35,42,0.98,43,1.801,44,1.854,45,1.093,46,1.501,47,1.783,48,0.674,50,0.5,51,0.034,52,0.494,53,0.522,54,0.5,55,0.98,56,1.783,57,0.98,58,1.783,61,0.583,63,1.121,65,1.34,72,1.401,73,0.98,74,1.401,79,1.549,80,1.549,82,0.7,83,0.98,84,0.392,85,0.98,86,2.055,87,0.638,88,0.696,89,1.402,90,0.98,93,0.235,94,0.042,95,0.583,96,1.266,97,1.666,100,1.379,101,1.947,102,2.782,103,1.947,104,0.98,105,0.98,106,0.98,107,1.34,108,1.726,109,1.947,112,0.638,130,1.182,141,1.401,146,1.166,147,1.387,149,0.9,150,1.401,151,0.98,152,0.98,153,0.98,154,1.401,155,1.886,156,1.401,157,0.98,163,1.085,164,1.182,165,0.995,166,0.583,167,0.995,168,0.995,169,0.696,170,0.696,171,0.696,172,0.482,173,0.696,174,0.436,175,0.696,176,0.436,177,0.696,178,0.436,179,0.833,180,0.696,181,0.436,182,1.161,183,0.436,184,0.638,185,0.436,186,0.638,187,0.995,188,0.482,189,0.638,190,0.696,191,0.436,192,0.696,193,0.436,194,0.623,195,0.696,196,0.436,197,0.436,198,0.583,199,0.696,200,0.436,201,0.482,202,0.792,203,0.696,204,0.696,205,0.02,206,0.02,272,3.798,321,1.402,326,2.243,346,3.205,901,4.936,902,2.243,903,3.847,904,3.847,905,2.693,906,3.847,907,2.693,908,2.693,909,2.693,910,2.693,911,2.693,912,2.693,913,2.693]],["title/interceptors/WebReqInterceptor.html",[228,1.795,914,2.256]],["body/interceptors/WebReqInterceptor.html",[3,0.258,4,0.22,8,0.22,12,1.16,23,0.299,24,0.535,29,0.89,41,0.385,45,1.095,48,0.639,50,0.614,51,0.034,52,0.477,53,0.541,54,0.614,63,1.202,79,1.705,80,1.705,82,0.664,84,0.431,88,0.766,92,1.543,93,0.258,94,0.046,95,0.641,100,1.569,112,0.702,128,1.705,141,2.148,143,1.633,149,0.991,158,1.283,194,0.765,205,0.021,206,0.021,208,1.899,228,2.367,247,1.705,262,2.142,350,2.143,368,3.693,381,1.95,386,4.914,387,4.434,391,4.255,394,2.975,423,3.427,425,2.142,431,3.418,437,3.427,458,3.427,459,2.468,661,2.142,680,2.142,914,2.975,915,2.962,916,4.119,917,2.468,918,4.727,919,4.727,920,4.114,921,4.114,922,5.107,923,2.962,924,4.114,925,5.697,926,2.962,927,4.114,928,6.288,929,5.554,930,4.114,931,5.554,932,2.962,933,4.114,934,4.114,935,4.114,936,4.727,937,2.962,938,4.727,939,4.114,940,4.114,941,4.114,942,4.114,943,4.114,944,5.366,945,2.962,946,2.962,947,4.114,948,4.727,949,4.114,950,2.962,951,4.114,952,4.114,953,2.962,954,2.962,955,2.962,956,2.962,957,4.114,958,2.962,959,2.962,960,2.962,961,2.962,962,2.962,963,2.962,964,2.962,965,2.962,966,2.962,967,2.962,968,4.727,969,2.962,970,2.962,971,2.468,972,4.114,973,2.962,974,2.962,975,2.962,976,2.962,977,2.962,978,2.962,979,2.962,980,2.962]],["title/injectables/WebRequestService.html",[350,1.625,367,1.999]],["body/injectables/WebRequestService.html",[3,0.237,4,0.201,8,0.201,23,0.274,24,0.503,27,1.419,29,0.975,33,2.479,41,0.352,46,1.9,48,0.683,50,0.762,51,0.034,52,0.592,53,0.592,54,0.762,61,0.84,63,1.326,66,2.479,82,0.503,84,0.395,93,0.237,94,0.043,95,0.587,141,2.105,179,1.063,205,0.02,206,0.02,208,1.739,247,1.561,293,2.559,294,3.171,350,2.014,351,1.961,353,2.479,359,3.221,365,4.092,367,2.479,368,2.796,369,4.092,372,2.479,375,3.326,381,2.56,384,5.072,394,2.796,399,3.221,419,3.221,425,1.961,431,4.18,463,3.221,916,4.333,981,2.26,982,4.506,983,4.506,984,4.912,985,4.912,986,2.712,987,3.867,988,2.712,989,2.712,990,3.867,991,2.712,992,5.68,993,6.289,994,3.867,995,2.712,996,3.867,997,2.712,998,2.712,999,3.867,1000,5.68,1001,5.399,1002,2.712,1003,3.867,1004,2.712,1005,2.712,1006,2.712,1007,2.712,1008,2.712,1009,2.26,1010,2.712,1011,2.712,1012,2.712,1013,2.712,1014,2.712,1015,2.712,1016,2.712,1017,2.712,1018,2.712,1019,2.712,1020,2.712]],["title/coverage.html",[1021,3.552]],["body/coverage.html",[0,0.033,1,0.613,8,0.281,9,3.153,10,2.426,11,3.153,18,0.897,25,1.378,43,1.266,45,0.747,51,0.034,53,0.382,94,0.091,172,0.678,174,0.613,176,0.613,178,0.613,181,0.613,183,0.613,185,0.613,188,0.678,191,0.613,193,0.613,194,0.613,196,0.613,197,0.613,200,0.613,202,0.613,205,0.025,206,0.025,207,3.153,228,2.178,239,2.737,249,2.426,252,2.426,254,2.426,257,2.426,259,2.426,260,2.426,265,2.426,268,2.426,272,2.426,300,3.153,305,1.378,350,2.784,352,3.153,367,2.426,471,3.153,475,1.972,481,3.153,493,2.426,494,3.153,506,3.153,529,4.154,549,3.504,550,3.153,588,3.426,602,3.153,634,2.737,675,3.153,676,3.504,714,3.153,799,3.504,800,3.153,844,3.153,845,3.153,859,3.153,882,3.153,896,3.153,901,3.153,902,3.153,914,2.737,916,3.504,917,3.153,981,3.153,1021,3.153,1022,3.785,1023,3.785,1024,3.785,1025,3.785,1026,3.785,1027,3.785,1028,4.846,1029,3.785,1030,5.345,1031,4.846,1032,4.846,1033,4.846,1034,4.846,1035,4.846,1036,3.785,1037,3.785,1038,3.785,1039,3.785,1040,3.785,1041,3.785,1042,3.785,1043,3.785,1044,3.785,1045,3.785,1046,3.785,1047,3.785,1048,3.785]],["title/dependencies.html",[217,2.406,1049,1.881]],["body/dependencies.html",[51,0.034,84,0.686,87,1.117,92,2.455,205,0.029,206,0.029,217,3.022,234,4.62,235,3.555,523,3.409,1050,4.714,1051,6.391,1052,4.714,1053,4.714,1054,4.714,1055,4.714,1056,4.714,1057,4.714,1058,4.714,1059,4.714,1060,4.714,1061,4.714,1062,4.714,1063,4.714]],["title/index.html",[23,0.262,858,2.167,1064,2.602]],["body/index.html",[0,0.029,4,0.316,12,1.2,17,0.921,51,0.027,52,0.429,165,1.101,194,0.689,198,1.129,205,0.027,206,0.027,212,3.544,374,3.077,404,3.544,410,3.077,971,5.024,1009,4.344,1049,3.077,1065,4.255,1066,5.638,1067,5.638,1068,3.544,1069,4.255,1070,4.255,1071,6.215,1072,4.255,1073,4.255,1074,4.255,1075,4.255,1076,4.255,1077,4.255,1078,4.255,1079,4.255,1080,4.255,1081,4.255,1082,5.638,1083,5.638,1084,4.255,1085,5.877,1086,4.255,1087,4.255,1088,4.255,1089,4.255,1090,5.214,1091,5.214,1092,5.877,1093,4.255,1094,5.214,1095,5.214,1096,4.255,1097,6.137,1098,4.255,1099,4.255,1100,4.255,1101,5.214,1102,4.255,1103,4.255,1104,4.255,1105,4.255,1106,4.255,1107,5.638,1108,4.255,1109,4.255,1110,3.077,1111,4.255]],["title/modules.html",[216,2.453]],["body/modules.html",[51,0.03,205,0.03,206,0.03,215,3.216,216,2.887,227,2.887,235,3.216,1112,5.017,1113,5.017,1114,5.75,1115,5.017,1116,5.017]],["title/overview.html",[1110,3.083]],["body/overview.html",[1,0.89,2,0.953,51,0.034,165,1.04,166,0.871,172,1.1,174,0.89,176,0.89,178,0.89,181,0.89,183,0.89,185,0.89,188,0.984,191,0.89,193,0.89,196,0.89,197,0.89,200,0.89,201,0.72,202,0.89,205,0.026,206,0.026,214,2.578,215,4.238,216,2.314,217,2.578,218,3.351,219,3.351,220,3.351,221,2.908,222,3.351,223,3.351,224,3.351,225,3.351,226,3.351,227,3.163,228,3.163,229,4.195,282,2.578,351,2.908,470,2.095,671,2.908,1110,2.908,1117,4.022,1118,4.022,1119,4.022,1120,4.022]],["title/properties.html",[24,0.488,1049,1.881]],["body/properties.html",[24,0.66,51,0.031,205,0.03,206,0.03,1068,4.229,1121,5.077]],["title/routes.html",[282,2.733]],["body/routes.html",[51,0.03,205,0.03,206,0.03,282,3.274]]],"invertedIndex":[["",{"_index":51,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":529,"title":{},"body":{"components/CommentsComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["0).subscribe",{"_index":820,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["0.0.0",{"_index":1121,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["0.9.4",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["0/10",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["1).subscribe",{"_index":822,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["15",{"_index":1117,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1120,"title":{},"body":{"overview.html":{}}}],["16/18",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["17.2.0",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["17.2.3",{"_index":1069,"title":{},"body":{"index.html":{}}}],["17.3.0",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":671,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"overview.html":{}}}],["2).subscribe",{"_index":825,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["2.3.0",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":739,"title":{},"body":{"components/LoginComponent.html":{}}}],["21/23",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":639,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["3",{"_index":1118,"title":{},"body":{"overview.html":{}}}],["3).subscribe",{"_index":827,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["3/7",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":962,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["42",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1119,"title":{},"body":{"overview.html":{}}}],["50",{"_index":634,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"coverage.html":{}}}],["6/12",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":779,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["88",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["9]/.test(password",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["_boardid",{"_index":482,"title":{},"body":{"classes/Column.html":{}}}],["_columnid",{"_index":883,"title":{},"body":{"classes/TaskCard.html":{}}}],["_id",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"classes/TaskCard.html":{},"classes/User.html":{}}}],["_taskcardid",{"_index":495,"title":{},"body":{"classes/Comment.html":{}}}],["_userid",{"_index":496,"title":{},"body":{"classes/Comment.html":{}}}],["a.position.valueof",{"_index":573,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["access",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{}}}],["accesstoken",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenrefreshed",{"_index":918,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["activatedroute",{"_index":47,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["active",{"_index":155,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["actual_component",{"_index":204,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["add",{"_index":17,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"index.html":{}}}],["addauthheader",{"_index":920,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["addauthheader(request",{"_index":924,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["addbuttonclick",{"_index":31,"title":{},"body":{"components/AddUserComponent.html":{}}}],["addbuttonclick(username",{"_index":60,"title":{},"body":{"components/AddUserComponent.html":{}}}],["added",{"_index":162,"title":{},"body":{"components/AddUserComponent.html":{}}}],["address",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["adds",{"_index":927,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["addusercomponent",{"_index":1,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["again",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["already",{"_index":161,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["angular",{"_index":1066,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":523,"title":{},"body":{"components/CommentsComponent.html":{},"components/EditTaskComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["angular/compiler",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":84,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":87,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"dependencies.html":{}}}],["api",{"_index":993,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["app.component",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":172,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1076,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":215,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":227,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arguments",{"_index":55,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["artifacts",{"_index":1086,"title":{},"body":{"index.html":{}}}],["assign",{"_index":301,"title":{},"body":{"components/AssignComponent.html":{}}}],["assign'},{'name",{"_index":175,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["assign.component.html",{"_index":302,"title":{},"body":{"components/AssignComponent.html":{}}}],["assign.component.scss",{"_index":303,"title":{},"body":{"components/AssignComponent.html":{}}}],["assign/:boardid/:columnid/:taskcardid",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["assignbutton",{"_index":330,"title":{},"body":{"components/AssignComponent.html":{}}}],["assignbutton.classlist.add('is",{"_index":333,"title":{},"body":{"components/AssignComponent.html":{}}}],["assignbuttonclick",{"_index":306,"title":{},"body":{"components/AssignComponent.html":{}}}],["assignbuttonclick(username",{"_index":309,"title":{},"body":{"components/AssignComponent.html":{}}}],["assigncomponent",{"_index":174,"title":{"components/AssignComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assigned",{"_index":347,"title":{},"body":{"components/AssignComponent.html":{},"components/CommentsComponent.html":{}}}],["assignedmodal",{"_index":342,"title":{},"body":{"components/AssignComponent.html":{}}}],["assignedmodal.classlist.remove('is",{"_index":344,"title":{},"body":{"components/AssignComponent.html":{}}}],["assignedto",{"_index":884,"title":{},"body":{"classes/TaskCard.html":{}}}],["async",{"_index":30,"title":{},"body":{"components/AddUserComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["attaches",{"_index":935,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["auth",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.service",{"_index":88,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{}}}],["authentication",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":45,"title":{"injectables/AuthService.html":{}},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"coverage.html":{}}}],["automatically",{"_index":1077,"title":{},"body":{"index.html":{}}}],["available",{"_index":1116,"title":{},"body":{"modules.html":{}}}],["await",{"_index":118,"title":{},"body":{"components/AddUserComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["b.position.valueof",{"_index":574,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["back",{"_index":348,"title":{},"body":{"components/AssignComponent.html":{},"components/CommentsComponent.html":{}}}],["backend",{"_index":1008,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["backtoboard",{"_index":510,"title":{},"body":{"components/CommentsComponent.html":{}}}],["before",{"_index":667,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["between",{"_index":670,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["board",{"_index":25,"title":{"classes/Board.html":{}},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"classes/Board.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/NewProjectComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{}}}],["board'},{'name",{"_index":180,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["board.component",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["board.component.html",{"_index":551,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["board.component.scss",{"_index":552,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["board.component.ts",{"_index":550,"title":{},"body":{"components/DeleteBoardComponent.html":{},"coverage.html":{}}}],["board.component.ts:16",{"_index":556,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["board.component.ts:19",{"_index":566,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["board.component.ts:20",{"_index":563,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["board.component.ts:34",{"_index":560,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["board.component.ts:42",{"_index":565,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["board.component.ts:48",{"_index":558,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["board.component.ts:52",{"_index":561,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["board.component.ts:63",{"_index":562,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["board.component.ts:68",{"_index":557,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["board.title",{"_index":587,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["board/:boardid",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["board/delete",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DeleteBoardComponent.html":{},"coverage.html":{}}}],["boardid",{"_index":304,"title":{},"body":{"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{}}}],["boards",{"_index":848,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["boolean",{"_index":143,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"interceptors/WebReqInterceptor.html":{}}}],["bootstrap",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["browse",{"_index":1114,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1085,"title":{},"body":{"index.html":{}}}],["bulma",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["cancel",{"_index":32,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["capabilities",{"_index":1105,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":950,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["catcherror((err",{"_index":966,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["catcherror((error",{"_index":959,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["change",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"components/NewProjectComponent.html":{},"index.html":{}}}],["characters",{"_index":669,"title":{},"body":{"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["check",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["checkemail",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/WebRequestService.html":{}}}],["checkemail(email",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/WebRequestService.html":{}}}],["checks",{"_index":938,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["checkuser",{"_index":33,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/WebRequestService.html":{}}}],["checkuser(username",{"_index":66,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/WebRequestService.html":{}}}],["choice",{"_index":1100,"title":{},"body":{"index.html":{}}}],["class",{"_index":94,"title":{"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"classes/TaskCard.html":{},"classes/User.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{},"coverage.html":{}}}],["classes",{"_index":470,"title":{},"body":{"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"overview.html":{}}}],["cli",{"_index":1067,"title":{},"body":{"index.html":{}}}],["click",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["close",{"_index":34,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["cluster_appmodule",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1080,"title":{},"body":{"index.html":{}}}],["column",{"_index":475,"title":{"classes/Column.html":{}},"body":{"classes/Board.html":{},"classes/Column.html":{},"components/DeleteBoardComponent.html":{},"components/NewTaskComponent.html":{},"coverage.html":{}}}],["column._id).subscribe",{"_index":583,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["column.model",{"_index":480,"title":{},"body":{"classes/Board.html":{}}}],["column.taskcards",{"_index":577,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["column[]).sort((a,b",{"_index":572,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["columninit",{"_index":553,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["columninit(boardid",{"_index":559,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["columninit(boardid:string",{"_index":569,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["columns",{"_index":473,"title":{},"body":{"classes/Board.html":{}}}],["command",{"_index":1101,"title":{},"body":{"index.html":{}}}],["comment",{"_index":493,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"components/CommentsComponent.html":{},"coverage.html":{}}}],["comment(message",{"_index":514,"title":{},"body":{"components/CommentsComponent.html":{}}}],["comment.date",{"_index":546,"title":{},"body":{"components/CommentsComponent.html":{}}}],["comment.message",{"_index":544,"title":{},"body":{"components/CommentsComponent.html":{}}}],["comment.username",{"_index":545,"title":{},"body":{"components/CommentsComponent.html":{}}}],["commentinput",{"_index":530,"title":{},"body":{"components/CommentsComponent.html":{}}}],["commentinput.value",{"_index":533,"title":{},"body":{"components/CommentsComponent.html":{}}}],["comments",{"_index":507,"title":{},"body":{"components/CommentsComponent.html":{}}}],["comments'},{'name",{"_index":177,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["comments.component.html",{"_index":508,"title":{},"body":{"components/CommentsComponent.html":{}}}],["comments.component.scss",{"_index":509,"title":{},"body":{"components/CommentsComponent.html":{}}}],["comments/:boardid/:columnid/:taskcardid",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["commentscomponent",{"_index":176,"title":{"components/CommentsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["completed",{"_index":826,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["component",{"_index":0,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":170,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"overview.html":{}}}],["confirm",{"_index":586,"title":{},"body":{"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["confirmbutton",{"_index":872,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["confirmbutton.classlist.add('is",{"_index":874,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log(\"logged",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"succcessfully",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('access",{"_index":977,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["console.log('fail",{"_index":137,"title":{},"body":{"components/AddUserComponent.html":{}}}],["console.log(board",{"_index":816,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["console.log(err",{"_index":967,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["console.log(error",{"_index":960,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["console.log(res",{"_index":138,"title":{},"body":{"components/AddUserComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["console.log(this.dateboundarycheck(date",{"_index":628,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["console.log(this.taskcard.title",{"_index":325,"title":{},"body":{"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["console.log(username",{"_index":327,"title":{},"body":{"components/AssignComponent.html":{}}}],["const",{"_index":112,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["constructor(_id",{"_index":474,"title":{},"body":{"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"classes/TaskCard.html":{},"classes/User.html":{}}}],["constructor(authservice",{"_index":680,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"interceptors/WebReqInterceptor.html":{}}}],["constructor(http",{"_index":986,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["constructor(private",{"_index":95,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["constructor(route",{"_index":860,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["constructor(taskservice",{"_index":42,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["constructor(webservice",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":1006,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["coverage",{"_index":1021,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":828,"title":{},"body":{"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["createproject",{"_index":803,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["createproject(title",{"_index":808,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["createtask",{"_index":829,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["credentials",{"_index":881,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["crud",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":497,"title":{},"body":{"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"classes/TaskCard.html":{}}}],["date()).subscribe(next",{"_index":535,"title":{},"body":{"components/CommentsComponent.html":{}}}],["date().todatestring",{"_index":666,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["date(date.todatestring",{"_index":663,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["date(dateinput.value",{"_index":627,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["date(new",{"_index":665,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["date).subscribe",{"_index":650,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["date:'dd/mm/yyyy",{"_index":543,"title":{},"body":{"components/CommentsComponent.html":{}}}],["date:\\'dd/mm/yyyy",{"_index":548,"title":{},"body":{"components/CommentsComponent.html":{}}}],["dateboundarycheck",{"_index":603,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["dateboundarycheck(date",{"_index":608,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["datedialog",{"_index":644,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["datedialog.close",{"_index":654,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["datedialog.show",{"_index":646,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["dateinput",{"_index":623,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["dateobj",{"_index":662,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["dd",{"_index":657,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["declarations",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":73,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["default",{"_index":79,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{}}}],["defined",{"_index":48,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["delete",{"_index":179,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"injectables/WebRequestService.html":{}}}],["delete(uri",{"_index":990,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["deleteboard",{"_index":554,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["deleteboardcomponent",{"_index":178,"title":{"components/DeleteBoardComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deletetaskcard",{"_index":591,"title":{},"body":{"components/DeleteTaskComponent.html":{}}}],["deletetaskcomponent",{"_index":181,"title":{"components/DeleteTaskComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dependencies",{"_index":217,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descinput",{"_index":625,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["descinput.value",{"_index":649,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["description",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"classes/TaskCard.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["details",{"_index":674,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["dev",{"_index":1073,"title":{},"body":{"index.html":{}}}],["development",{"_index":1070,"title":{},"body":{"index.html":{}}}],["directive",{"_index":169,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["directives",{"_index":203,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1084,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1089,"title":{},"body":{"index.html":{}}}],["dist",{"_index":1088,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(\"navbarbutton",{"_index":153,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["document.getelementbyid(\"navbardropdown",{"_index":151,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["document.getelementbyid('assignbutton",{"_index":332,"title":{},"body":{"components/AssignComponent.html":{}}}],["document.getelementbyid('assigned",{"_index":343,"title":{},"body":{"components/AssignComponent.html":{}}}],["document.getelementbyid('commentinput",{"_index":532,"title":{},"body":{"components/CommentsComponent.html":{}}}],["document.getelementbyid('confirmbutton",{"_index":873,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["document.getelementbyid('dateerror",{"_index":645,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["document.getelementbyid('emailinvaliderror",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{}}}],["document.getelementbyid('emailnotinuseerror",{"_index":695,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["document.getelementbyid('emailtakenerror",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{}}}],["document.getelementbyid('emptyfielderror",{"_index":734,"title":{},"body":{"components/LoginComponent.html":{}}}],["document.getelementbyid('inputlength250error",{"_index":641,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["document.getelementbyid('inputlength50error",{"_index":636,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["document.getelementbyid('invalidemailerror",{"_index":692,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["document.getelementbyid('invalidloginerror",{"_index":742,"title":{},"body":{"components/LoginComponent.html":{}}}],["document.getelementbyid('main",{"_index":131,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["document.getelementbyid('passwordmismatcherror",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["document.getelementbyid('passwordstrengtherror",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["document.getelementbyid('sendbutton",{"_index":698,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["document.getelementbyid('sub",{"_index":133,"title":{},"body":{"components/AddUserComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["document.getelementbyid('taskdateinput",{"_index":624,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["document.getelementbyid('taskdescriptioninput",{"_index":626,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["document.getelementbyid('tasktitleinput",{"_index":622,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["document.getelementbyid('titleerror",{"_index":631,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{}}}],["document.getelementbyid('unassigned",{"_index":339,"title":{},"body":{"components/AssignComponent.html":{}}}],["document.getelementbyid('userexistserror",{"_index":115,"title":{},"body":{"components/AddUserComponent.html":{}}}],["document.getelementbyid('usernameerror",{"_index":123,"title":{},"body":{"components/AddUserComponent.html":{}}}],["document.getelementbyid('usertakenerror",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{}}}],["document:click",{"_index":40,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["document:click(event",{"_index":57,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["documentation",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["dragdropmodule",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["drop",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["due",{"_index":541,"title":{},"body":{"components/CommentsComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["duedate",{"_index":885,"title":{},"body":{"classes/TaskCard.html":{}}}],["dynamic",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1098,"title":{},"body":{"index.html":{}}}],["edit",{"_index":184,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["edittaskcomponent",{"_index":183,"title":{"components/EditTaskComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":168,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["email",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"injectables/WebRequestService.html":{}}}],["emailcheck",{"_index":688,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["emailinvaliddialog",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailinvaliddialog.close",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailinvaliddialog.show",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailnotinusedialog",{"_index":694,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["emailnotinusedialog.close",{"_index":707,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["emailnotinusedialog.show",{"_index":696,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["emailregex",{"_index":703,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["emailregex.test(email",{"_index":705,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["emailtakendialog",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailtakendialog.close",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailtakendialog.show",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{}}}],["empty",{"_index":949,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["emptyfielddialog",{"_index":733,"title":{},"body":{"components/LoginComponent.html":{}}}],["emptyfielddialog.close",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{}}}],["emptyfielddialog.show",{"_index":735,"title":{},"body":{"components/LoginComponent.html":{}}}],["en",{"_index":658,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["end",{"_index":1097,"title":{},"body":{"index.html":{}}}],["enough",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["enter",{"_index":708,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["error",{"_index":158,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ResetPasswordComponent.html":{},"interceptors/WebReqInterceptor.html":{}}}],["error.status",{"_index":961,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["event",{"_index":56,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["execute",{"_index":1094,"title":{},"body":{"index.html":{}}}],["exist",{"_index":121,"title":{},"body":{"components/AddUserComponent.html":{}}}],["exists",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":93,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["exports",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":661,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"interceptors/WebReqInterceptor.html":{}}}],["fields",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{},"coverage.html":{}}}],["files",{"_index":1079,"title":{},"body":{"index.html":{}}}],["fill",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{}}}],["first",{"_index":1103,"title":{},"body":{"index.html":{}}}],["firstvaluefrom",{"_index":91,"title":{},"body":{"components/AddUserComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["firstvaluefrom(emailcheck",{"_index":702,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["firstvaluefrom(usercheck",{"_index":142,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["for(var",{"_index":579,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["forget",{"_index":186,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["forgetpassword",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgetpassword(email",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgetpasswordcomponent",{"_index":185,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgot",{"_index":710,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatdate",{"_index":522,"title":{},"body":{"components/CommentsComponent.html":{},"components/EditTaskComponent.html":{}}}],["formatdate(date",{"_index":610,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["found",{"_index":159,"title":{},"body":{"components/AddUserComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["frontend",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["full",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1106,"title":{},"body":{"index.html":{}}}],["gb",{"_index":659,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["generate",{"_index":1082,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1065,"title":{},"body":{"index.html":{}}}],["get(uri",{"_index":994,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["getaccesstoken",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["getnewaccesstoken",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["getrefreshtoken",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":1064,"title":{"index.html":{}},"body":{}}],["getuserid",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusername",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebRequestService.html":{}}}],["getusername(userid",{"_index":996,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["getusernamewithid",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusernamewithid(id",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":1109,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1115,"title":{},"body":{"modules.html":{}}}],["haslowercase",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hasnumber",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hasuppercase",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["header",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{}}}],["headers",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{}}}],["help",{"_index":1107,"title":{},"body":{"index.html":{}}}],["here",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["hh:mm:ss",{"_index":547,"title":{},"body":{"components/CommentsComponent.html":{}}}],["hidden",{"_index":135,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hostlistener",{"_index":83,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["hostlistener('document:click",{"_index":74,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["hostlisteners",{"_index":39,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["html",{"_index":167,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["htmlbuttonelement",{"_index":331,"title":{},"body":{"components/AssignComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["htmldialogelement",{"_index":114,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["htmldivelement",{"_index":130,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["htmlinputelement",{"_index":531,"title":{},"body":{"components/CommentsComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["http",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["http://localhost:3000",{"_index":1011,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["http://localhost:4200",{"_index":1075,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebRequestService.html":{}}}],["httpclientmodule",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":947,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["httphandler",{"_index":931,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["httpinterceptor",{"_index":948,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["httprequest",{"_index":925,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["httpresponse",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["id",{"_index":108,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/ViewUsersComponent.html":{}}}],["identifier",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["if(!this.isvalidemail(email",{"_index":690,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["if(!usernamecheck",{"_index":120,"title":{},"body":{"components/AddUserComponent.html":{}}}],["if(event.target",{"_index":152,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["if(res",{"_index":878,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(usercheck",{"_index":744,"title":{},"body":{"components/LoginComponent.html":{}}}],["implements",{"_index":12,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"index.html":{}}}],["import",{"_index":82,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["imports",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["include",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["initcolumns",{"_index":804,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["initcolumns(boardid",{"_index":810,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["initiating",{"_index":955,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["injectable",{"_index":350,"title":{"injectables/AuthService.html":{},"injectables/WebRequestService.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{},"coverage.html":{}}}],["injectables",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebRequestService.html":{},"overview.html":{}}}],["input",{"_index":615,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{}}}],["input.length",{"_index":660,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["inputlength250dialog",{"_index":640,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["inputlength250dialog.close",{"_index":652,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["inputlength250dialog.show",{"_index":642,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["inputlength50dialog",{"_index":635,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["inputlength50dialog.close",{"_index":653,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["inputlength50dialog.show",{"_index":637,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["inputlengthcheck",{"_index":604,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["inputlengthcheck(input",{"_index":612,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["intercept",{"_index":921,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["intercept(request",{"_index":930,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["interceptor",{"_index":914,"title":{"interceptors/WebReqInterceptor.html":{}},"body":{"interceptors/WebReqInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":915,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["intercepts",{"_index":933,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["invalidemaildialog",{"_index":691,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["invalidemaildialog.close",{"_index":706,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["invalidemaildialog.show",{"_index":693,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["invalidlogindialog",{"_index":741,"title":{},"body":{"components/LoginComponent.html":{}}}],["invalidlogindialog.close",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{}}}],["invalidlogindialog.show",{"_index":743,"title":{},"body":{"components/LoginComponent.html":{}}}],["isnan(date.gettime",{"_index":643,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["isstrongpassword",{"_index":717,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isstrongpassword(password",{"_index":724,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isvalidemail",{"_index":679,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["isvalidemail(email",{"_index":684,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["kanban",{"_index":189,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["kanbanize",{"_index":163,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["kanbanviewcomponent",{"_index":188,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["karma",{"_index":1096,"title":{},"body":{"index.html":{}}}],["later",{"_index":673,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["legend",{"_index":166,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"overview.html":{}}}],["length",{"_index":613,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["letters",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["limit",{"_index":668,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["link",{"_index":711,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["list",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DeleteBoardComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/ProjectListComponent.html":{}}}],["list'},{'name",{"_index":199,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["list.component",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.html",{"_index":846,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.scss",{"_index":847,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts",{"_index":845,"title":{},"body":{"components/ProjectListComponent.html":{},"coverage.html":{}}}],["list.component.ts:14",{"_index":853,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:15",{"_index":849,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:18",{"_index":852,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:27",{"_index":851,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:32",{"_index":850,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list/project",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["loading",{"_index":334,"title":{},"body":{"components/AssignComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["local",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('user",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('x",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('user",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('x",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('user",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('x",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":164,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["logged",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/WebRequestService.html":{}}}],["login'},{'name",{"_index":192,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["login(username",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebRequestService.html":{}}}],["login.component.html",{"_index":715,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":716,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":191,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":35,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["logs",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["lowercase",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["mainmodal",{"_index":129,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["mainmodal.classlist.add('is",{"_index":134,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["match",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["matching",{"_index":206,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["message",{"_index":498,"title":{},"body":{"classes/Comment.html":{},"components/CommentsComponent.html":{}}}],["message.length",{"_index":528,"title":{},"body":{"components/CommentsComponent.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["methods",{"_index":29,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["minlength",{"_index":777,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["mm",{"_index":656,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["models/board.model",{"_index":89,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/DeleteBoardComponent.html":{},"components/NewProjectComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["models/column.model",{"_index":567,"title":{},"body":{"components/DeleteBoardComponent.html":{},"components/NewTaskComponent.html":{}}}],["models/comment.model",{"_index":521,"title":{},"body":{"components/CommentsComponent.html":{}}}],["models/taskcard.model",{"_index":319,"title":{},"body":{"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["models/user.model",{"_index":90,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["module",{"_index":214,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":216,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1108,"title":{},"body":{"index.html":{}}}],["mouseevent",{"_index":58,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["multi",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":52,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{},"index.html":{}}}],["navdropdown",{"_index":150,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["navdropdown.classlist.add('is",{"_index":157,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["navdropdown.classlist.contains('is",{"_index":154,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["navdropdown.classlist.remove('is",{"_index":156,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["navigate",{"_index":1074,"title":{},"body":{"index.html":{}}}],["need",{"_index":1102,"title":{},"body":{"index.html":{}}}],["needs",{"_index":823,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["new",{"_index":194,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["newcomment",{"_index":536,"title":{},"body":{"components/CommentsComponent.html":{}}}],["newprojectcomponent",{"_index":193,"title":{"components/NewProjectComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newtaskcomponent",{"_index":196,"title":{"components/NewTaskComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["next",{"_index":100,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{}}}],["next.handle(request",{"_index":965,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":958,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["ng",{"_index":1071,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["null",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":485,"title":{},"body":{"classes/Column.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"classes/TaskCard.html":{}}}],["number(this.column.taskcards.length",{"_index":843,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["numbers",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["object",{"_index":1001,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["observable",{"_index":936,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["observable(observer",{"_index":969,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["observe",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebRequestService.html":{}}}],["observer.complete",{"_index":974,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["observer.next",{"_index":973,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["ok",{"_index":160,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ondocumentclick",{"_index":37,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["ondocumentclick(event",{"_index":72,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["one",{"_index":943,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["ongoing",{"_index":939,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["onloginbuttonclick",{"_index":718,"title":{},"body":{"components/LoginComponent.html":{}}}],["onloginbuttonclick(username",{"_index":727,"title":{},"body":{"components/LoginComponent.html":{}}}],["onregisterbuttonclick",{"_index":719,"title":{},"body":{"components/LoginComponent.html":{}}}],["onregisterbuttonclick(username",{"_index":729,"title":{},"body":{"components/LoginComponent.html":{}}}],["operations",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["optional",{"_index":54,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["out",{"_index":165,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{},"index.html":{},"overview.html":{}}}],["outgoing",{"_index":929,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["overview",{"_index":1110,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1049,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["pages/add",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/assign/assign.component",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/comments/comments.component",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/delete",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/edit",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/forget",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/kanban",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/login/login.component",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/new",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/project",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/reset",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/view",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["param",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["parameters",{"_index":50,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["params",{"_index":86,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["params['boardid",{"_index":321,"title":{},"body":{"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"components/ViewUsersComponent.html":{}}}],["params['columnid']).subscribe(next",{"_index":838,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["params['taskcardid']).subscribe(next",{"_index":323,"title":{},"body":{"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["params['token",{"_index":869,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/WebRequestService.html":{}}}],["password'},{'name",{"_index":187,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["password).pipe",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["password).subscribe",{"_index":737,"title":{},"body":{"components/LoginComponent.html":{}}}],["password).subscribe((res",{"_index":877,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.html",{"_index":677,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":678,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":676,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:10",{"_index":681,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:13",{"_index":867,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:14",{"_index":687,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":866,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:38",{"_index":864,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":682,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:43",{"_index":685,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:48",{"_index":683,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:53",{"_index":861,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:60",{"_index":862,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.length",{"_index":778,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password/:token",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["password/forget",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password1",{"_index":730,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password1).subscribe((res",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{}}}],["password2",{"_index":731,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordmismatchdialog",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordmismatchdialog.close",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordmismatchdialog.show",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwords",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordstrengthdialog",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordstrengthdialog.close",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordstrengthdialog.show",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["patch",{"_index":984,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["patch(uri",{"_index":999,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["path",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":1000,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["pipe",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["place",{"_index":941,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["platform",{"_index":1099,"title":{},"body":{"index.html":{}}}],["please",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["position",{"_index":483,"title":{},"body":{"classes/Column.html":{},"classes/TaskCard.html":{}}}],["post",{"_index":985,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["post(uri",{"_index":1003,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["priority",{"_index":886,"title":{},"body":{"classes/TaskCard.html":{}}}],["private",{"_index":96,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["problem",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{}}}],["process",{"_index":956,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["progress",{"_index":821,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["project",{"_index":198,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"index.html":{}}}],["project'},{'name",{"_index":195,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["project.component",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["project.component.html",{"_index":801,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["project.component.scss",{"_index":802,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["project.component.ts",{"_index":800,"title":{},"body":{"components/NewProjectComponent.html":{},"coverage.html":{}}}],["project.component.ts:13",{"_index":805,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["project.component.ts:16",{"_index":814,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["project.component.ts:17",{"_index":813,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["project.component.ts:24",{"_index":809,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["project.component.ts:41",{"_index":811,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["project.component.ts:48",{"_index":812,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["project.component.ts:52",{"_index":807,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["project.component.ts:60",{"_index":806,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["project.title",{"_index":857,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["project/new",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NewProjectComponent.html":{},"coverage.html":{}}}],["projectlistcomponent",{"_index":197,"title":{"components/ProjectListComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projects",{"_index":856,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{},"properties.html":{}}}],["provide",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["providers",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["public",{"_index":472,"title":{},"body":{"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"classes/TaskCard.html":{},"classes/User.html":{}}}],["readonly",{"_index":982,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["redirect",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirectto",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1111,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{}}}],["refreshaccesstoken",{"_index":922,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["refreshed",{"_index":972,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["refreshingaccesstoken",{"_index":919,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["refreshtoken",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["register",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["related",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["reload",{"_index":1078,"title":{},"body":{"index.html":{}}}],["remove",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["removesession",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["req.interceptor",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["req.interceptor.ts",{"_index":917,"title":{},"body":{"interceptors/WebReqInterceptor.html":{},"coverage.html":{}}}],["req.interceptor.ts:16",{"_index":923,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["req.interceptor.ts:20",{"_index":946,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["req.interceptor.ts:22",{"_index":945,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["req.interceptor.ts:30",{"_index":932,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["req.interceptor.ts:64",{"_index":937,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["req.interceptor.ts:91",{"_index":926,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["request",{"_index":928,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["request.clone",{"_index":979,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["request.service",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["request.service.ts",{"_index":981,"title":{},"body":{"injectables/WebRequestService.html":{},"coverage.html":{}}}],["request.service.ts:101",{"_index":997,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["request.service.ts:13",{"_index":987,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["request.service.ts:24",{"_index":995,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["request.service.ts:33",{"_index":1004,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["request.service.ts:42",{"_index":1002,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["request.service.ts:51",{"_index":991,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["request.service.ts:61",{"_index":998,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["request.service.ts:77",{"_index":1005,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["request.service.ts:89",{"_index":989,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["request.service.ts:95",{"_index":988,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["requests",{"_index":934,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["res",{"_index":127,"title":{},"body":{"components/AddUserComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["res.headers.get('x",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.status",{"_index":738,"title":{},"body":{"components/LoginComponent.html":{}}}],["reset",{"_index":201,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"overview.html":{}}}],["reset(password",{"_index":863,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpassword",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(password1",{"_index":865,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpassword(token",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":200,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["response",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebRequestService.html":{}}}],["responsible",{"_index":954,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["restful",{"_index":1007,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["results",{"_index":205,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["return",{"_index":141,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["returns",{"_index":63,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["review",{"_index":824,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["root",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["root'},{'name",{"_index":173,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["root_url",{"_index":983,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["route",{"_index":46,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"injectables/WebRequestService.html":{}}}],["router",{"_index":44,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ViewUsersComponent.html":{}}}],["routermodule",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":282,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":971,"title":{},"body":{"interceptors/WebReqInterceptor.html":{},"index.html":{}}}],["running",{"_index":1090,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":92,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"interceptors/WebReqInterceptor.html":{},"dependencies.html":{}}}],["s@]+@[^\\s@]+\\.[^\\s",{"_index":704,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["save",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"components/EditTaskComponent.html":{}}}],["scaffolding",{"_index":1081,"title":{},"body":{"index.html":{}}}],["select",{"_index":328,"title":{},"body":{"components/AssignComponent.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["send",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgetPasswordComponent.html":{}}}],["send(email",{"_index":686,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sendbutton",{"_index":697,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sendbutton.classlist.add('is",{"_index":699,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sent",{"_index":712,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["serve",{"_index":1072,"title":{},"body":{"index.html":{}}}],["server",{"_index":1009,"title":{},"body":{"injectables/WebRequestService.html":{},"index.html":{}}}],["session",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["setaccesstoken",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["setaccesstoken(accesstoken",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["setheaders",{"_index":980,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["setsession",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["setsession(userid",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["sharereplay",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["sign",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{}}}],["signed",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebRequestService.html":{}}}],["signup(username",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebRequestService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{},"index.html":{}}}],["specified",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/app",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.service.ts",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth.service.ts:109",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:119",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:129",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:138",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:14",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:148",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:169",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:178",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:186",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:195",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:24",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:42",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:57",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:69",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:79",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:89",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:99",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/models/board.model.ts",{"_index":471,"title":{},"body":{"classes/Board.html":{},"coverage.html":{}}}],["src/app/models/board.model.ts:3",{"_index":476,"title":{},"body":{"classes/Board.html":{}}}],["src/app/models/board.model.ts:5",{"_index":477,"title":{},"body":{"classes/Board.html":{}}}],["src/app/models/board.model.ts:6",{"_index":479,"title":{},"body":{"classes/Board.html":{}}}],["src/app/models/board.model.ts:7",{"_index":478,"title":{},"body":{"classes/Board.html":{}}}],["src/app/models/column.model.ts",{"_index":481,"title":{},"body":{"classes/Column.html":{},"coverage.html":{}}}],["src/app/models/column.model.ts:3",{"_index":486,"title":{},"body":{"classes/Column.html":{}}}],["src/app/models/column.model.ts:5",{"_index":488,"title":{},"body":{"classes/Column.html":{}}}],["src/app/models/column.model.ts:6",{"_index":487,"title":{},"body":{"classes/Column.html":{}}}],["src/app/models/column.model.ts:7",{"_index":491,"title":{},"body":{"classes/Column.html":{}}}],["src/app/models/column.model.ts:8",{"_index":489,"title":{},"body":{"classes/Column.html":{}}}],["src/app/models/column.model.ts:9",{"_index":490,"title":{},"body":{"classes/Column.html":{}}}],["src/app/models/comment.model.ts",{"_index":494,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["src/app/models/comment.model.ts:1",{"_index":499,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/models/comment.model.ts:3",{"_index":500,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/models/comment.model.ts:4",{"_index":501,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/models/comment.model.ts:5",{"_index":502,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/models/comment.model.ts:6",{"_index":505,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/models/comment.model.ts:7",{"_index":504,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/models/comment.model.ts:8",{"_index":503,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/models/taskcard.model.ts",{"_index":882,"title":{},"body":{"classes/TaskCard.html":{},"coverage.html":{}}}],["src/app/models/taskcard.model.ts:1",{"_index":887,"title":{},"body":{"classes/TaskCard.html":{}}}],["src/app/models/taskcard.model.ts:10",{"_index":890,"title":{},"body":{"classes/TaskCard.html":{}}}],["src/app/models/taskcard.model.ts:3",{"_index":889,"title":{},"body":{"classes/TaskCard.html":{}}}],["src/app/models/taskcard.model.ts:4",{"_index":888,"title":{},"body":{"classes/TaskCard.html":{}}}],["src/app/models/taskcard.model.ts:5",{"_index":895,"title":{},"body":{"classes/TaskCard.html":{}}}],["src/app/models/taskcard.model.ts:6",{"_index":891,"title":{},"body":{"classes/TaskCard.html":{}}}],["src/app/models/taskcard.model.ts:7",{"_index":893,"title":{},"body":{"classes/TaskCard.html":{}}}],["src/app/models/taskcard.model.ts:8",{"_index":892,"title":{},"body":{"classes/TaskCard.html":{}}}],["src/app/models/taskcard.model.ts:9",{"_index":894,"title":{},"body":{"classes/TaskCard.html":{}}}],["src/app/models/user.model.ts",{"_index":896,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts:1",{"_index":897,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:3",{"_index":898,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:5",{"_index":900,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:6",{"_index":899,"title":{},"body":{"classes/User.html":{}}}],["src/app/pages/add",{"_index":9,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/pages/assign/assign.component.ts",{"_index":300,"title":{},"body":{"components/AssignComponent.html":{},"coverage.html":{}}}],["src/app/pages/assign/assign.component.ts:15",{"_index":315,"title":{},"body":{"components/AssignComponent.html":{}}}],["src/app/pages/assign/assign.component.ts:16",{"_index":317,"title":{},"body":{"components/AssignComponent.html":{}}}],["src/app/pages/assign/assign.component.ts:17",{"_index":318,"title":{},"body":{"components/AssignComponent.html":{}}}],["src/app/pages/assign/assign.component.ts:18",{"_index":307,"title":{},"body":{"components/AssignComponent.html":{}}}],["src/app/pages/assign/assign.component.ts:22",{"_index":316,"title":{},"body":{"components/AssignComponent.html":{}}}],["src/app/pages/assign/assign.component.ts:23",{"_index":313,"title":{},"body":{"components/AssignComponent.html":{}}}],["src/app/pages/assign/assign.component.ts:44",{"_index":314,"title":{},"body":{"components/AssignComponent.html":{}}}],["src/app/pages/assign/assign.component.ts:54",{"_index":310,"title":{},"body":{"components/AssignComponent.html":{}}}],["src/app/pages/assign/assign.component.ts:81",{"_index":311,"title":{},"body":{"components/AssignComponent.html":{}}}],["src/app/pages/assign/assign.component.ts:85",{"_index":312,"title":{},"body":{"components/AssignComponent.html":{}}}],["src/app/pages/assign/assign.component.ts:90",{"_index":308,"title":{},"body":{"components/AssignComponent.html":{}}}],["src/app/pages/comments/comments.component.ts",{"_index":506,"title":{},"body":{"components/CommentsComponent.html":{},"coverage.html":{}}}],["src/app/pages/comments/comments.component.ts:16",{"_index":520,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/pages/comments/comments.component.ts:17",{"_index":518,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/pages/comments/comments.component.ts:18",{"_index":519,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/pages/comments/comments.component.ts:19",{"_index":511,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/pages/comments/comments.component.ts:23",{"_index":517,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/pages/comments/comments.component.ts:44",{"_index":513,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/pages/comments/comments.component.ts:49",{"_index":516,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/pages/comments/comments.component.ts:53",{"_index":515,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/pages/comments/comments.component.ts:69",{"_index":512,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/pages/delete",{"_index":549,"title":{},"body":{"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"coverage.html":{}}}],["src/app/pages/edit",{"_index":602,"title":{},"body":{"components/EditTaskComponent.html":{},"coverage.html":{}}}],["src/app/pages/forget",{"_index":675,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/kanban",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/login/login.component.ts",{"_index":714,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/login/login.component.ts:102",{"_index":721,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:107",{"_index":725,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:12",{"_index":720,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:121",{"_index":726,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:17",{"_index":728,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:40",{"_index":732,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:77",{"_index":723,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:96",{"_index":722,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/new",{"_index":799,"title":{},"body":{"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"coverage.html":{}}}],["src/app/pages/project",{"_index":844,"title":{},"body":{"components/ProjectListComponent.html":{},"coverage.html":{}}}],["src/app/pages/reset",{"_index":859,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/view",{"_index":901,"title":{},"body":{"components/ViewUsersComponent.html":{},"coverage.html":{}}}],["src/app/task.service.ts",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["src/app/web",{"_index":916,"title":{},"body":{"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{},"coverage.html":{}}}],["started",{"_index":858,"title":{"index.html":{}},"body":{"components/ProjectListComponent.html":{}}}],["starts",{"_index":942,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["statements",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["stored",{"_index":1087,"title":{},"body":{"index.html":{}}}],["string",{"_index":61,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"injectables/WebRequestService.html":{}}}],["strong",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["subject",{"_index":944,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["submodal",{"_index":132,"title":{},"body":{"components/AddUserComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["submodal.classlist.remove('is",{"_index":136,"title":{},"body":{"components/AddUserComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["successfully",{"_index":879,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["support",{"_index":1112,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1113,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":951,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["table",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{}}}],["taking",{"_index":940,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["tap",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{}}}],["tap((res",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["target",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["task",{"_index":345,"title":{},"body":{"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["task'},{'name",{"_index":182,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["task._id).subscribe",{"_index":581,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["task.component",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["task.component.html",{"_index":589,"title":{},"body":{"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["task.component.scss",{"_index":590,"title":{},"body":{"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["task.component.ts",{"_index":588,"title":{},"body":{"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:104",{"_index":616,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["task.component.ts:109",{"_index":606,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:14",{"_index":592,"title":{},"body":{"components/DeleteTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["task.component.ts:15",{"_index":605,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:16",{"_index":598,"title":{},"body":{"components/DeleteTaskComponent.html":{}}}],["task.component.ts:17",{"_index":599,"title":{},"body":{"components/DeleteTaskComponent.html":{}}}],["task.component.ts:18",{"_index":597,"title":{},"body":{"components/DeleteTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["task.component.ts:19",{"_index":619,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["task.component.ts:20",{"_index":620,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["task.component.ts:21",{"_index":836,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:22",{"_index":617,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:33",{"_index":594,"title":{},"body":{"components/DeleteTaskComponent.html":{}}}],["task.component.ts:37",{"_index":595,"title":{},"body":{"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.component.ts:38",{"_index":832,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:41",{"_index":618,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:42",{"_index":596,"title":{},"body":{"components/DeleteTaskComponent.html":{}}}],["task.component.ts:47",{"_index":593,"title":{},"body":{"components/DeleteTaskComponent.html":{}}}],["task.component.ts:69",{"_index":833,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:73",{"_index":607,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:78",{"_index":830,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:82",{"_index":831,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:85",{"_index":611,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:89",{"_index":614,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:93",{"_index":834,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:95",{"_index":609,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:99",{"_index":835,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.service",{"_index":85,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["task/:boardid/:columnid",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["task/:boardid/:columnid/:taskcardid",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["task/delete",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DeleteTaskComponent.html":{},"coverage.html":{}}}],["task/edit",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditTaskComponent.html":{},"coverage.html":{}}}],["task/new",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NewTaskComponent.html":{},"coverage.html":{}}}],["taskcard",{"_index":305,"title":{"classes/TaskCard.html":{}},"body":{"components/AssignComponent.html":{},"classes/Column.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"classes/TaskCard.html":{},"coverage.html":{}}}],["taskcard.assignedto",{"_index":540,"title":{},"body":{"components/CommentsComponent.html":{}}}],["taskcard.description",{"_index":539,"title":{},"body":{"components/CommentsComponent.html":{}}}],["taskcard.duedate",{"_index":542,"title":{},"body":{"components/CommentsComponent.html":{}}}],["taskcard.model",{"_index":492,"title":{},"body":{"classes/Column.html":{}}}],["taskcard.title",{"_index":538,"title":{},"body":{"components/CommentsComponent.html":{},"components/DeleteTaskComponent.html":{}}}],["taskcard[]).sort((a,b",{"_index":578,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["taskcards",{"_index":484,"title":{},"body":{"classes/Column.html":{}}}],["taskinit",{"_index":555,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["taskinit(column",{"_index":564,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["taskservice",{"_index":43,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{}}}],["temp",{"_index":525,"title":{},"body":{"components/CommentsComponent.html":{}}}],["temp.reverse",{"_index":526,"title":{},"body":{"components/CommentsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["test",{"_index":1093,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1104,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1092,"title":{},"body":{"index.html":{}}}],["this.accesstokenrefreshed.next",{"_index":976,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["this.accesstokenrefreshed.subscribe",{"_index":970,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["this.addauthheader(request",{"_index":957,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["this.authservice.checkemail(email",{"_index":701,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.checkuser(username",{"_index":140,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.forgetpassword(email).subscribe",{"_index":700,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.authservice.getaccesstoken",{"_index":978,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["this.authservice.getnewaccesstoken().pipe",{"_index":975,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["this.authservice.getusername().subscribe(next",{"_index":104,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["this.authservice.getusernamewithid(id['_userid']).subscribe(next",{"_index":109,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/ViewUsersComponent.html":{}}}],["this.authservice.login(username",{"_index":736,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":149,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{}}}],["this.authservice.resetpassword(this.token",{"_index":876,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.signup(username",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.board",{"_index":99,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteBoardComponent.html":{}}}],["this.board._id",{"_index":148,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteBoardComponent.html":{}}}],["this.board.columns",{"_index":571,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["this.boardid",{"_index":320,"title":{},"body":{"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["this.boards",{"_index":855,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.checkemail(email",{"_index":689,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.checkuser(username",{"_index":119,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.column",{"_index":839,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.column.taskcards",{"_index":841,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.columninit(this.board._id",{"_index":568,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["this.comments",{"_index":527,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.comments.unshift(newcomment",{"_index":537,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.dateboundarycheck(date",{"_index":647,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["this.getrefreshtoken",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getuserid",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete(`${this.root_url}/${uri",{"_index":1015,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["this.http.get(`${this.root_url}/${uri",{"_index":1012,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["this.http.get(`${this.webservice.root_url}/users/me/access",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.patch(`${this.root_url}/${uri",{"_index":1014,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["this.http.post(`${this.root_url}/${uri",{"_index":1013,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["this.http.post(`${this.root_url}/users",{"_index":1017,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["this.http.post(`${this.root_url}/users/email",{"_index":1019,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["this.http.post(`${this.root_url}/users/getuser",{"_index":1020,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["this.http.post(`${this.root_url}/users/login",{"_index":1016,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["this.http.post(`${this.root_url}/users/username",{"_index":1018,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["this.http.post(`${this.webservice.root_url}/reset",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.webservice.root_url}/send",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.initcolumns(board._id",{"_index":817,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["this.inputlengthcheck(descinput.value",{"_index":638,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["this.inputlengthcheck(titleinput.value",{"_index":633,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["this.isstrongpassword(password1",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.isvalidemail(email",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.refreshaccesstoken().pipe",{"_index":964,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["this.refreshingaccesstoken",{"_index":968,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["this.removesession",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.reset(password1",{"_index":875,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.root_url",{"_index":1010,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["this.route.params.subscribe",{"_index":97,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"components/ViewUsersComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":868,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/kanban",{"_index":146,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"components/ViewUsersComponent.html":{}}}],["this.router.navigate(['/project",{"_index":740,"title":{},"body":{"components/LoginComponent.html":{},"components/NewProjectComponent.html":{}}}],["this.router.navigate(['project",{"_index":585,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setaccesstoken(res.headers.get('x",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setsession(res.body._id",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.taskcard",{"_index":324,"title":{},"body":{"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["this.taskcard._id",{"_index":336,"title":{},"body":{"components/AssignComponent.html":{},"components/EditTaskComponent.html":{}}}],["this.taskcard._id).subscribe",{"_index":601,"title":{},"body":{"components/DeleteTaskComponent.html":{}}}],["this.taskinit(column",{"_index":575,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["this.taskservice.adduser(this.board._id",{"_index":125,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.taskservice.createboard(title).subscribe(next",{"_index":815,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["this.taskservice.createcolumn(boardid",{"_index":819,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["this.taskservice.createcomment(this.taskcard._id",{"_index":534,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.taskservice.createtaskcard(this.column._id",{"_index":842,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.taskservice.deleteboard(this.board._id).subscribe",{"_index":584,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["this.taskservice.deletecolumn(column._boardid",{"_index":582,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["this.taskservice.deletetaskcard(task._columnid",{"_index":580,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["this.taskservice.deletetaskcard(this.taskcard._columnid",{"_index":600,"title":{},"body":{"components/DeleteTaskComponent.html":{}}}],["this.taskservice.getboard(params['boardid']).subscribe(next",{"_index":98,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteBoardComponent.html":{}}}],["this.taskservice.getboards().subscribe(next",{"_index":854,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.taskservice.getcolumn(this.boardid",{"_index":837,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.taskservice.getcolumns(boardid).subscribe(next",{"_index":570,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["this.taskservice.getcomments(this.taskcard._id).subscribe(next",{"_index":524,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.taskservice.gettaskcard(params['columnid",{"_index":322,"title":{},"body":{"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["this.taskservice.gettaskcards(column._id).subscribe(next",{"_index":576,"title":{},"body":{"components/DeleteBoardComponent.html":{}}}],["this.taskservice.gettaskcards(this.column._id).subscribe(next",{"_index":840,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.taskservice.getusers(params['boardid']).subscribe(next",{"_index":101,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/ViewUsersComponent.html":{}}}],["this.taskservice.updatetaskcardassigned(this.taskcard._columnid",{"_index":335,"title":{},"body":{"components/AssignComponent.html":{}}}],["this.taskservice.updatetaskcarddetails(this.taskcard._columnid",{"_index":648,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.token",{"_index":871,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.userids",{"_index":102,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/ViewUsersComponent.html":{}}}],["this.username",{"_index":105,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["this.users.includes(username",{"_index":111,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.users.push(user",{"_index":326,"title":{},"body":{"components/AssignComponent.html":{},"components/ViewUsersComponent.html":{}}}],["this.users.push(user.username",{"_index":110,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.usersinit",{"_index":103,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/ViewUsersComponent.html":{}}}],["this.webservice.checkemail(email",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.webservice.checkuser(username",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.webservice.getusername(id",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.webservice.getusername(this.getuserid",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.webservice.login(username",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.webservice.signup(username",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerror",{"_index":952,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["title",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"classes/Board.html":{},"classes/Column.html":{},"components/CommentsComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"classes/TaskCard.html":{}}}],["titledialog",{"_index":630,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{}}}],["titledialog.close",{"_index":651,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{}}}],["titledialog.show",{"_index":632,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{}}}],["titleinput",{"_index":621,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["titleinput.value",{"_index":629,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["today",{"_index":664,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["token",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{},"interceptors/WebReqInterceptor.html":{}}}],["tokens",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["true",{"_index":128,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{},"interceptors/WebReqInterceptor.html":{}}}],["try",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{}}}],["tslib",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":53,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Column.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/TaskCard.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{},"coverage.html":{}}}],["unassign",{"_index":329,"title":{},"body":{"components/AssignComponent.html":{}}}],["unassigned",{"_index":349,"title":{},"body":{"components/AssignComponent.html":{}}}],["unassigned').subscribe",{"_index":337,"title":{},"body":{"components/AssignComponent.html":{}}}],["unassignedmodal",{"_index":338,"title":{},"body":{"components/AssignComponent.html":{}}}],["unassignedmodal.classlist.remove('is",{"_index":340,"title":{},"body":{"components/AssignComponent.html":{}}}],["unauthorised",{"_index":963,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["undefined",{"_index":870,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["unit",{"_index":1091,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":68,"title":{},"body":{"components/AddUserComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["up",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["updated",{"_index":880,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["uppercase",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uri",{"_index":992,"title":{},"body":{"injectables/WebRequestService.html":{}}}],["use",{"_index":1083,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":18,"title":{"classes/User.html":{}},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{}}}],["user'},{'name",{"_index":171,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["user).username",{"_index":106,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ViewUsersComponent.html":{}}}],["user.component",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["user.component.html",{"_index":20,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.scss",{"_index":22,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts",{"_index":11,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:14",{"_index":49,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:17",{"_index":78,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:18",{"_index":77,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:19",{"_index":81,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:21",{"_index":76,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:22",{"_index":71,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:39",{"_index":75,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:49",{"_index":62,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:76",{"_index":67,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:82",{"_index":69,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:89",{"_index":64,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:93",{"_index":70,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:98",{"_index":59,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.username",{"_index":346,"title":{},"body":{"components/AssignComponent.html":{},"components/ViewUsersComponent.html":{}}}],["user/:boardid",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user/add",{"_index":10,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["usercheck",{"_index":139,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["userexistsdialog",{"_index":113,"title":{},"body":{"components/AddUserComponent.html":{}}}],["userexistsdialog.close",{"_index":144,"title":{},"body":{"components/AddUserComponent.html":{}}}],["userexistsdialog.show",{"_index":116,"title":{},"body":{"components/AddUserComponent.html":{}}}],["userid",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{},"injectables/WebRequestService.html":{}}}],["userids",{"_index":26,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/ViewUsersComponent.html":{}}}],["username",{"_index":27,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"classes/User.html":{},"components/ViewUsersComponent.html":{},"injectables/WebRequestService.html":{}}}],["username).subscribe",{"_index":341,"title":{},"body":{"components/AssignComponent.html":{}}}],["username).subscribe((res:any",{"_index":126,"title":{},"body":{"components/AddUserComponent.html":{}}}],["usernamecheck",{"_index":117,"title":{},"body":{"components/AddUserComponent.html":{}}}],["usernamedialog",{"_index":122,"title":{},"body":{"components/AddUserComponent.html":{}}}],["usernamedialog.close",{"_index":145,"title":{},"body":{"components/AddUserComponent.html":{}}}],["usernamedialog.show",{"_index":124,"title":{},"body":{"components/AddUserComponent.html":{}}}],["users",{"_index":28,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["users.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["users.component.html",{"_index":903,"title":{},"body":{"components/ViewUsersComponent.html":{}}}],["users.component.scss",{"_index":904,"title":{},"body":{"components/ViewUsersComponent.html":{}}}],["users.component.ts",{"_index":902,"title":{},"body":{"components/ViewUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:13",{"_index":905,"title":{},"body":{"components/ViewUsersComponent.html":{}}}],["users.component.ts:16",{"_index":912,"title":{},"body":{"components/ViewUsersComponent.html":{}}}],["users.component.ts:18",{"_index":911,"title":{},"body":{"components/ViewUsersComponent.html":{}}}],["users.component.ts:20",{"_index":913,"title":{},"body":{"components/ViewUsersComponent.html":{}}}],["users.component.ts:22",{"_index":909,"title":{},"body":{"components/ViewUsersComponent.html":{}}}],["users.component.ts:36",{"_index":910,"title":{},"body":{"components/ViewUsersComponent.html":{}}}],["users.component.ts:46",{"_index":907,"title":{},"body":{"components/ViewUsersComponent.html":{}}}],["users.component.ts:53",{"_index":908,"title":{},"body":{"components/ViewUsersComponent.html":{}}}],["users.component.ts:58",{"_index":906,"title":{},"body":{"components/ViewUsersComponent.html":{}}}],["users/:boardid",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users/view",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{}}}],["usersinit",{"_index":38,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"components/ViewUsersComponent.html":{}}}],["usertakendialog",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{}}}],["usertakendialog.close",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{}}}],["usertakendialog.show",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{}}}],["valid",{"_index":709,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["validity",{"_index":953,"title":{},"body":{"interceptors/WebReqInterceptor.html":{}}}],["value",{"_index":80,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/ViewUsersComponent.html":{},"interceptors/WebReqInterceptor.html":{}}}],["var",{"_index":107,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["version",{"_index":1068,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1095,"title":{},"body":{"index.html":{}}}],["view",{"_index":147,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["view'},{'name",{"_index":190,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["view.component",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["view.component.ts",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["view/:boardid",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["view/board._id",{"_index":818,"title":{},"body":{"components/NewProjectComponent.html":{}}}],["view/kanban",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["viewuserscomponent",{"_index":202,"title":{"components/ViewUsersComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AssignComponent.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["void",{"_index":65,"title":{},"body":{"components/AddUserComponent.html":{},"components/AssignComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/DeleteBoardComponent.html":{},"components/DeleteTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NewProjectComponent.html":{},"components/NewTaskComponent.html":{},"components/ProjectListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ViewUsersComponent.html":{}}}],["web",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{}}}],["webreqinterceptor",{"_index":228,"title":{"interceptors/WebReqInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/WebReqInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["webrequestservice",{"_index":367,"title":{"injectables/WebRequestService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/WebRequestService.html":{},"coverage.html":{}}}],["webservice",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["window",{"_index":713,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["x",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/WebReqInterceptor.html":{}}}],["years",{"_index":672,"title":{},"body":{"components/EditTaskComponent.html":{},"components/NewTaskComponent.html":{}}}],["yyyy",{"_index":655,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["z]/.test(password",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["zone.js",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/add-user/add-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n\n            \n                styleUrl\n                ./add-user.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                board\n                            \n                            \n                                userIds\n                            \n                            \n                                username\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addButtonClick\n                            \n                            \n                                cancel\n                            \n                            \n                                    Async\n                                checkUser\n                            \n                            \n                                close\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                usersInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, router: Router, authService: AuthService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/add-user/add-user.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/add-user/add-user.component.ts:98\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addButtonClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    addButtonClick(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/add-user/add-user.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/add-user/add-user.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUser(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/add-user/add-user.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/add-user/add-user.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/add-user/add-user.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/add-user/add-user.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/add-user/add-user.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersInit\n                        \n                    \n                \n            \n            \n                \nusersInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/add-user/add-user.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        board\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Board\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/add-user/add-user.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/add-user/add-user.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/add-user/add-user.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/add-user/add-user.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { TaskService } from '../../task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { AuthService } from '../../auth.service';\nimport { Board } from '../../models/board.model';\nimport { User } from '../../models/user.model';\nimport { firstValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrl: './add-user.component.scss'\n})\nexport class AddUserComponent implements OnInit{\n  constructor(private taskService: TaskService, private router: Router, private authService: AuthService, private route: ActivatedRoute) {  }\n\n  username!: string;\n  userIds!: any[];\n  users: string[] = [];\n\n  board!: Board;\n  ngOnInit() { \n    this.route.params.subscribe(\n      (params: Params) => {\n        this.taskService.getBoard(params['boardId']).subscribe(next => {\n          this.board = next as Board\n          this.taskService.getUsers(params['boardId']).subscribe(next => {\n            this.userIds = next as string[];\n            this.usersInit()\n          })\n        })\n      }\n    )\n    this.authService.getUsername().subscribe(next => {\n      this.username = (next as User).username\n    })\n  }\n\n  usersInit() {\n    for (var id of this.userIds) {\n      this.authService.getUsernameWithId(id['_userId']).subscribe(next => {\n        let user = next as User\n        this.users.push(user.username);\n        \n      })\n    }\n  }\n\n  async addButtonClick(username: string) {\n    if (this.users.includes(username)) {\n      const userExistsDialog : HTMLDialogElement = document.getElementById('userExistsError') as HTMLDialogElement;\n      userExistsDialog.show();\n    } else {\n      let usernamecheck = await this.checkUser(username);\n      if(!usernamecheck) {\n        //username does not exist\n        const usernameDialog : HTMLDialogElement = document.getElementById('usernameError') as HTMLDialogElement;\n        usernameDialog.show();\n      } else {\n        this.taskService.addUser(this.board._id, username).subscribe((res:any) => {\n          if (res === true) {\n            const mainModal: HTMLDivElement = document.getElementById('main') as HTMLDivElement;\n            const subModal: HTMLDivElement = document.getElementById('sub') as HTMLDivElement;\n            mainModal.classList.add('is-hidden');\n            subModal.classList.remove('is-hidden');\n          } else {\n            console.log('fail')\n            console.log(res)\n          }\n        })\n      }\n    }\n    \n  }\n\n  async checkUser(username: string) {\n    const usercheck$ = this.authService.checkUser(username);\n    return await firstValueFrom(usercheck$) as Boolean;\n    \n  }\n\n  close() {\n    const usernameDialog : HTMLDialogElement = document.getElementById('usernameError') as HTMLDialogElement;\n    const userExistsDialog : HTMLDialogElement = document.getElementById('userExistsError') as HTMLDialogElement;\n      userExistsDialog.close();\n      usernameDialog.close();\n  }\n\n  cancel() {\n    this.router.navigate(['/kanban-view', this.board._id]);\n  }\n\n  logout() {\n    this.authService.logout()\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent) {\n    const navDropdown: HTMLDivElement = document.getElementById(\"navbarDropdown\") as HTMLDivElement;\n    if (navDropdown) {\n      if(event.target == document.getElementById(\"navbarButton\")) {\n        if (navDropdown.classList.contains('is-active')){\n          navDropdown.classList.remove('is-active')\n        } else {\n          navDropdown.classList.add('is-active')\n        }\n      } else {\n        if (navDropdown.classList.contains('is-active')) {\n          navDropdown.classList.remove('is-active')\n        }\n      }\n    }\n    \n  }\n}\n\n    \n\n    \n        \n  \n    Error\n    Username not found!\n    Ok\n  \n\n\n  \n    Error\n    User already added!\n    Ok\n  \n\n\n\n  \n    \n      \n        Kanbanize\n      \n    \n    \n      \n        {{\n          username\n        }}\n        \n          Log Out\n        \n      \n    \n  \n  \n    \n      Add User\n      \n        \n      \n\n      \n      \n        Cancel\n        \n          Add\n        \n      \n    \n    \n      User Added!\n      \n      \n        \n          Return to Board\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Error    Username not found!    Ok        Error    User already added!    Ok                      Kanbanize                            {{          username        }}                  Log Out                                Add User                                        Cancel                  Add                            User Added!                              Return to Board                    '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'frontend'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAssignComponent\n\nAssignComponent\n\nAppModule -->\n\nAssignComponent->AppModule\n\n\n\n\n\nCommentsComponent\n\nCommentsComponent\n\nAppModule -->\n\nCommentsComponent->AppModule\n\n\n\n\n\nDeleteBoardComponent\n\nDeleteBoardComponent\n\nAppModule -->\n\nDeleteBoardComponent->AppModule\n\n\n\n\n\nDeleteTaskComponent\n\nDeleteTaskComponent\n\nAppModule -->\n\nDeleteTaskComponent->AppModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nAppModule -->\n\nEditTaskComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nKanbanViewComponent\n\nKanbanViewComponent\n\nAppModule -->\n\nKanbanViewComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNewProjectComponent\n\nNewProjectComponent\n\nAppModule -->\n\nNewProjectComponent->AppModule\n\n\n\n\n\nNewTaskComponent\n\nNewTaskComponent\n\nAppModule -->\n\nNewTaskComponent->AppModule\n\n\n\n\n\nProjectListComponent\n\nProjectListComponent\n\nAppModule -->\n\nProjectListComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nViewUsersComponent\n\nViewUsersComponent\n\nAppModule -->\n\nViewUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWebReqInterceptor\n\nWebReqInterceptor\n\nAppModule -->\n\nWebReqInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddUserComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            AssignComponent\n                        \n                        \n                            CommentsComponent\n                        \n                        \n                            DeleteBoardComponent\n                        \n                        \n                            DeleteTaskComponent\n                        \n                        \n                            EditTaskComponent\n                        \n                        \n                            ForgetPasswordComponent\n                        \n                        \n                            KanbanViewComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NewProjectComponent\n                        \n                        \n                            NewTaskComponent\n                        \n                        \n                            ProjectListComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            ViewUsersComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            WebReqInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { KanbanViewComponent } from './pages/kanban-view/kanban-view.component';\n\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { LoginComponent } from './pages/login/login.component';\n\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\nimport { ProjectListComponent } from './pages/project-list/project-list.component';\nimport { NewProjectComponent } from './pages/new-project/new-project.component';\nimport { EditTaskComponent } from './pages/edit-task/edit-task.component';\nimport { DeleteTaskComponent } from './pages/delete-task/delete-task.component';\nimport { DeleteBoardComponent } from './pages/delete-board/delete-board.component';\nimport { WebReqInterceptor } from './web-req.interceptor';\nimport { ForgetPasswordComponent } from './pages/forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\nimport { AddUserComponent } from './pages/add-user/add-user.component';\nimport { ViewUsersComponent } from './pages/view-users/view-users.component';\nimport { CommentsComponent } from './pages/comments/comments.component';\nimport { AssignComponent } from './pages/assign/assign.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    KanbanViewComponent,\n    NewTaskComponent,\n    ProjectListComponent,\n    NewProjectComponent,\n    EditTaskComponent,\n    DeleteTaskComponent,\n    DeleteBoardComponent,\n    LoginComponent,\n    ForgetPasswordComponent,\n    ResetPasswordComponent,\n    AddUserComponent,\n    ViewUsersComponent,\n    CommentsComponent,\n    AssignComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DragDropModule,\n    HttpClientModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: WebReqInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { KanbanViewComponent } from './pages/kanban-view/kanban-view.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\nimport { ProjectListComponent } from './pages/project-list/project-list.component';\nimport { NewProjectComponent } from './pages/new-project/new-project.component';\nimport { EditTaskComponent } from './pages/edit-task/edit-task.component';\nimport { DeleteTaskComponent } from './pages/delete-task/delete-task.component';\nimport { DeleteBoardComponent } from './pages/delete-board/delete-board.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ForgetPasswordComponent } from './pages/forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\nimport { AddUserComponent } from './pages/add-user/add-user.component';\nimport { ViewUsersComponent } from './pages/view-users/view-users.component';\nimport { CommentsComponent } from './pages/comments/comments.component';\nimport { AssignComponent } from './pages/assign/assign.component';\n\n\nconst routes: Routes = [\n  { path: 'kanban-view', component: KanbanViewComponent },\n  { path: 'kanban-view/:boardId', component: KanbanViewComponent },\n  { path: 'project-list', component: ProjectListComponent },\n  { path: 'new-task/:boardId/:columnId', component: NewTaskComponent },\n  { path: 'edit-task/:boardId/:columnId/:taskcardId', component: EditTaskComponent },\n  { path: 'delete-task/:boardId/:columnId/:taskcardId', component: DeleteTaskComponent },\n  { path: 'comments/:boardId/:columnId/:taskcardId', component: CommentsComponent },\n  { path: 'assign/:boardId/:columnId/:taskcardId', component: AssignComponent },\n  { path: 'delete-board/:boardId', component: DeleteBoardComponent },\n  { path: 'add-user/:boardId', component: AddUserComponent },\n  { path: 'view-users/:boardId', component: ViewUsersComponent },\n  { path: 'new-project', component: NewProjectComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'forget-password', component: ForgetPasswordComponent },\n  { path: 'reset-password/:token', component: ResetPasswordComponent },\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssignComponent.html":{"url":"components/AssignComponent.html","title":"component - AssignComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AssignComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/assign/assign.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-assign\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./assign.component.html\n            \n\n\n\n            \n                styleUrl\n                ./assign.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardId\n                            \n                            \n                                taskcard\n                            \n                            \n                                userIds\n                            \n                            \n                                username\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                assignButtonClick\n                            \n                            \n                                cancel\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                usersInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, router: Router, authService: AuthService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/assign/assign.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/assign/assign.component.ts:90\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        assignButtonClick\n                        \n                    \n                \n            \n            \n                \nassignButtonClick(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/assign/assign.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/assign/assign.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/assign/assign.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/assign/assign.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/assign/assign.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersInit\n                        \n                    \n                \n            \n            \n                \nusersInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/assign/assign.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        boardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/assign/assign.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskcard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskCard\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/assign/assign.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/assign/assign.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/assign/assign.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/assign/assign.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { TaskService } from '../../task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { AuthService } from '../../auth.service';\nimport { Board } from '../../models/board.model';\nimport { TaskCard } from '../../models/taskcard.model';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-assign',\n  templateUrl: './assign.component.html',\n  styleUrl: './assign.component.scss'\n})\nexport class AssignComponent implements OnInit{\n  boardId!: string;\n  username!: string;\n  users: User[] = [];\n  userIds!: any[];\n\n  constructor(private taskService: TaskService, private router: Router, private authService: AuthService, private route: ActivatedRoute) {  }\n\n  taskcard!: TaskCard;\n  ngOnInit() { \n    this.route.params.subscribe(\n      (params: Params) => {\n        this.boardId = params['boardId']\n        this.taskService.getTaskCard(params['columnId'], params['taskcardId']).subscribe(next => {\n          this.taskcard = next as TaskCard;\n          console.log(this.taskcard.title)\n          this.taskService.getUsers(params['boardId']).subscribe(next => {\n            this.userIds = next as string[];\n            this.usersInit()\n          })\n          \n        })\n        \n      }\n    )\n    this.authService.getUsername().subscribe(next => {\n      this.username = (next as User).username\n    })\n  }\n\n  usersInit() {\n    for (var id of this.userIds) {\n      this.authService.getUsernameWithId(id['_userId']).subscribe(next => {\n        let user = next as User\n        this.users.push(user);\n        \n      })\n    }\n  }\n\n  assignButtonClick(username: string) {\n    console.log(username);\n    if (username === 'Select User') {\n\n    } \n    else if (username === 'Unassign') {\n      const assignButton: HTMLButtonElement = document.getElementById('assignButton') as HTMLButtonElement;\n      assignButton.classList.add('is-loading');\n      this.taskService.updateTaskCardAssigned(this.taskcard._columnId, this.taskcard._id, 'Unassigned').subscribe(() => {\n        const mainModal: HTMLDivElement = document.getElementById('main') as HTMLDivElement;\n        const unassignedModal: HTMLDivElement = document.getElementById('unassigned') as HTMLDivElement;\n        mainModal.classList.add('is-hidden');\n        unassignedModal.classList.remove('is-hidden');\n      });\n    }\n    else {\n      const assignButton: HTMLButtonElement = document.getElementById('assignButton') as HTMLButtonElement;\n      assignButton.classList.add('is-loading');\n      this.taskService.updateTaskCardAssigned(this.taskcard._columnId, this.taskcard._id, username).subscribe(() => {\n        const mainModal: HTMLDivElement = document.getElementById('main') as HTMLDivElement;\n        const assignedModal: HTMLDivElement = document.getElementById('assigned') as HTMLDivElement;\n        mainModal.classList.add('is-hidden');\n        assignedModal.classList.remove('is-hidden');\n      });\n    }\n  }\n\n  cancel() {\n    this.router.navigate(['/kanban-view', this.boardId]);\n  }\n\n  logout() {\n    this.authService.logout()\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent) {\n    const navDropdown: HTMLDivElement = document.getElementById(\"navbarDropdown\") as HTMLDivElement;\n    if (navDropdown) {\n      if(event.target == document.getElementById(\"navbarButton\")) {\n        if (navDropdown.classList.contains('is-active')){\n          navDropdown.classList.remove('is-active')\n        } else {\n          navDropdown.classList.add('is-active')\n        }\n      } else {\n        if (navDropdown.classList.contains('is-active')) {\n          navDropdown.classList.remove('is-active')\n        }\n      }\n    }\n    \n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Kanbanize\n      \n    \n    \n      \n        {{\n          username\n        }}\n        \n          Log Out\n        \n      \n    \n  \n  \n    \n      Assign User to Task\n      \n        \n          \n            Select User\n            {{ user.username }}\n            Unassign\n          \n        \n      \n\n      \n      \n        Cancel\n        \n          Assign\n        \n      \n    \n    \n      Assign User to Task\n      User Assigned!\n\n      \n      \n        \n          Back to Board\n        \n      \n    \n    \n      Assign User to Task\n      User Unassigned!\n\n      \n      \n        \n          Back to Board\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Kanbanize                            {{          username        }}                  Log Out                                Assign User to Task                                    Select User            {{ user.username }}            Unassign                                            Cancel                  Assign                            Assign User to Task      User Assigned!                              Back to Board                            Assign User to Task      User Unassigned!                              Back to Board                    '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AssignComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkEmail\n                            \n                            \n                                checkUser\n                            \n                            \n                                forgetPassword\n                            \n                            \n                                getAccessToken\n                            \n                            \n                                getNewAccessToken\n                            \n                            \n                                getRefreshToken\n                            \n                            \n                                getUserId\n                            \n                            \n                                getUsername\n                            \n                            \n                                getUsernameWithId\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                removeSession\n                            \n                            \n                                resetPassword\n                            \n                            \n                                setAccessToken\n                            \n                            \n                                    Private\n                                setSession\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(webService: WebRequestService, router: Router, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        webService\n                                                  \n                                                        \n                                                                        WebRequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:178\n                        \n                    \n\n\n            \n                \n                        check if email exists\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkUser\n                        \n                    \n                \n            \n            \n                \ncheckUser(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:169\n                        \n                    \n\n\n            \n                \n                        check if username exists\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgetPassword\n                        \n                    \n                \n            \n            \n                \nforgetPassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n                        send a reset password email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    target email address\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAccessToken\n                        \n                    \n                \n            \n            \n                \ngetAccessToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:89\n                        \n                    \n\n\n            \n                \n                        get access token from browser local storage\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                access token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNewAccessToken\n                        \n                    \n                \n            \n            \n                \ngetNewAccessToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:148\n                        \n                    \n\n\n            \n                \n                        refresh access token\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                new access token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \ngetRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:99\n                        \n                    \n\n\n            \n                \n                        get refresh token from browser local storage\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                refresh token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserId\n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n                        get userid from browser local storage\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                userid\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsername\n                        \n                    \n                \n            \n            \n                \ngetUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:186\n                        \n                    \n\n\n            \n                \n                        get username from local user id\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                username\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsernameWithId\n                        \n                    \n                \n            \n            \n                \ngetUsernameWithId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:195\n                        \n                    \n\n\n            \n                \n                        get username specified by userid\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                username\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    username\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:79\n                        \n                    \n\n\n            \n                \n                        logs a user out and redirect to login page\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:138\n                        \n                    \n\n\n            \n                \n                        remove login session from browser local storage\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(token: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Change password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    reset token\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    new password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccessToken\n                        \n                    \n                \n            \n            \n                \nsetAccessToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:119\n                        \n                    \n\n\n            \n                \n                        save access token to browser local storage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    setSession(userId: string, accessToken: string, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:129\n                        \n                    \n\n\n            \n                \n                        set login session to browser local storage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.service.ts:42\n                        \n                    \n\n\n            \n                \n                        signup a new user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                response\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { WebRequestService } from './web-request.service';\nimport { Router } from '@angular/router';\nimport { shareReplay, tap } from 'rxjs';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Provides methods for authentication and CRUD operations related to authentication.\n */\nexport class AuthService {\n\n  constructor(private webService: WebRequestService, private router: Router, private http: HttpClient) { }\n\n  /**\n   * Login\n   * @param username username\n   * @param password password\n   * @returns response\n   */\n  login(username: string, password: string) {\n    return this.webService.login(username, password).pipe(\n      shareReplay(),\n      tap((res: HttpResponse) => {\n        //auth tokens will be in the header of this response\n        this.setSession(res.body._id, res.headers.get('x-access-token') as string, res.headers.get('x-refresh-token') as string)\n        console.log(\"LOGGED IN\");\n      })\n    )\n  }\n\n  /**\n   * signup a new user\n   * @param username \n   * @param email \n   * @param password \n   * @returns response\n   */\n  signup(username: string, email: string, password: string) {\n    return this.webService.signup(username, email, password).pipe(\n      shareReplay(),\n      tap((res: HttpResponse) => {\n        this.setSession(res.body._id, res.headers.get('x-access-token') as string, res.headers.get('x-refresh-token') as string)\n        console.log(\"succcessfully signed up and logged in\");\n      })\n    )\n  }\n\n  /**\n   * send a reset password email\n   * @param email target email address\n   * @returns response\n   */\n  forgetPassword(email: string) {\n    return this.http.post(`${this.webService.ROOT_URL}/send-email`, {\n      email\n    })\n  }\n\n  /**\n   * Change password\n   * @param token reset token\n   * @param password new password\n   * @returns response\n   */\n  resetPassword(token: string, password: string) {\n    return this.http.post(`${this.webService.ROOT_URL}/reset-password`, {\n      token: token,\n      password: password\n    })\n  }\n\n  /**\n   * logs a user out and redirect to login page\n   */\n  logout() {\n    this.removeSession();\n\n    this.router.navigateByUrl('/login');\n  }\n\n  /**\n   * get access token from browser local storage\n   * @returns access token\n   */\n  getAccessToken() {\n    let accessToken = localStorage.getItem('x-access-token');\n    if (!accessToken !== null) return accessToken as string;\n    else return '';\n  }\n\n  /**\n   * get refresh token from browser local storage\n   * @returns refresh token\n   */\n  getRefreshToken() {\n    let refreshToken = localStorage.getItem('x-refresh-token');\n    if (!refreshToken !== null) return refreshToken as string;\n    else return '';\n  }\n\n  /**\n   * get userid from browser local storage\n   * @returns userid\n   */\n  getUserId() {\n    let userId = localStorage.getItem('user-id');\n    if (!userId !== null) return userId as string;\n    else return '';\n  }\n\n  /**\n   * save access token to browser local storage\n   * @param accessToken \n   */\n  setAccessToken(accessToken: string) {\n    localStorage.setItem('x-access-token', accessToken)\n  }\n\n  /**\n   * set login session to browser local storage\n   * @param userId \n   * @param accessToken \n   * @param refreshToken \n   */\n  private setSession(userId: string, accessToken: string, refreshToken: string) {\n    localStorage.setItem('user-id', userId);\n    localStorage.setItem('x-access-token', accessToken);\n    localStorage.setItem('x-refresh-token', refreshToken);\n  }\n\n  /**\n   * remove login session from browser local storage\n   */\n  private removeSession() {\n    localStorage.removeItem('user-id');\n    localStorage.removeItem('x-access-token');\n    localStorage.removeItem('x-refresh-token');\n  }\n\n  /**\n   * refresh access token\n   * @returns new access token\n   */\n  getNewAccessToken() {\n    \n\n    return this.http.get(`${this.webService.ROOT_URL}/users/me/access-token`, { \n      headers: {\n        'x-refresh-token': this.getRefreshToken(),\n        '_id': this.getUserId()\n      },\n      observe: 'response'\n    }).pipe(\n      tap((res: HttpResponse) => {\n        this.setAccessToken(res.headers.get('x-access-token') ?? '');\n      })\n    )\n  }\n\n  /**\n   * check if username exists\n   * @param username \n   * @returns boolean\n   */\n  checkUser(username: string) {\n    return this.webService.checkUser(username);\n  }\n\n  /**\n   * check if email exists\n   * @param email \n   * @returns boolean\n   */\n  checkEmail(email: string) {\n    return this.webService.checkEmail(email);\n  }\n\n  /**\n   * get username from local user id\n   * @returns username\n   */\n  getUsername() {\n    return this.webService.getUsername(this.getUserId());\n  }\n\n  /**\n   * get username specified by userid\n   * @param id \n   * @returns username\n   */\n  getUsernameWithId(id: string) {\n    return this.webService.getUsername(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Board.html":{"url":"classes/Board.html","title":"class - Board","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Board\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/board.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                columns\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_id: string, title: string, columns: Column[])\n                    \n                \n                        \n                            \n                                Defined in src/app/models/board.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        columns\n                                                  \n                                                        \n                                                                        Column[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/board.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Column[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/board.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/board.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column } from './column.model';\n\nexport class Board {\n  constructor(\n    public _id: string,\n    public title: string,\n    public columns: Column[]\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Column.html":{"url":"classes/Column.html","title":"class - Column","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Column\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/column.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _boardId\n                            \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                position\n                            \n                            \n                                    Public\n                                taskcards\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_id: string, _boardId: string, title: string, position: Number, taskcards: TaskCard[])\n                    \n                \n                        \n                            \n                                Defined in src/app/models/column.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _boardId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        position\n                                                  \n                                                        \n                                                                        Number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskcards\n                                                  \n                                                        \n                                                                        TaskCard[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _boardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/column.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/column.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/column.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskcards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskCard[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/column.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/column.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TaskCard } from './taskcard.model';\n\nexport class Column {\n  constructor(\n    public _id: string,\n    public _boardId: string,\n    public title: string,\n    public position: Number,\n    public taskcards: TaskCard[]\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/comment.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                _taskcardId\n                            \n                            \n                                    Public\n                                _userId\n                            \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_id: string, _taskcardId: string, _userId: string, username: string, message: string, date: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/comment.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _taskcardId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/comment.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _taskcardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/comment.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/comment.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/comment.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/comment.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/comment.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Comment {\n  constructor(\n    public _id: string,\n    public _taskcardId: string,\n    public _userId: string,\n    public username: string,\n    public message: string,\n    public date: Date\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentsComponent.html":{"url":"components/CommentsComponent.html","title":"component - CommentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CommentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/comments/comments.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comments\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./comments.component.html\n            \n\n\n\n            \n                styleUrl\n                ./comments.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardId\n                            \n                            \n                                comments\n                            \n                            \n                                taskcard\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToBoard\n                            \n                            \n                                comment\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, route: ActivatedRoute, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/comments/comments.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/comments/comments.component.ts:69\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backToBoard\n                        \n                    \n                \n            \n            \n                \nbackToBoard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/comments/comments.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n            \n                \ncomment(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/comments/comments.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/comments/comments.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/comments/comments.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/comments/comments.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        boardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/comments/comments.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/comments/comments.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskcard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskCard\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/comments/comments.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/comments/comments.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { TaskService } from '../../task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { AuthService } from '../../auth.service';\nimport { TaskCard } from '../../models/taskcard.model';\nimport { User } from '../../models/user.model';\nimport { Comment } from '../../models/comment.model'\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrl: './comments.component.scss'\n})\nexport class CommentsComponent implements OnInit{\n  username!: string;\n  boardId!: string;\n  taskcard!: TaskCard;\n  comments!: Comment[];\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.boardId = params['boardId']\n        this.taskService.getTaskCard(params['columnId'], params['taskcardId']).subscribe(next => {\n          this.taskcard = next as TaskCard;\n          console.log(this.taskcard.title)\n          this.taskService.getComments(this.taskcard._id).subscribe(next => {\n            let temp = next as Comment[];\n            temp.reverse();\n            this.comments = temp;\n          })\n        })\n        \n      }\n    )\n    this.authService.getUsername().subscribe(next => {\n      this.username = (next as User).username\n    })\n  }\n\n  backToBoard() {\n    this.router.navigate(['/kanban-view', this.boardId]);\n  }\n\n  \n  logout() {\n    this.authService.logout()\n  }\n\n  comment(message: string) {\n    if (message.length === 0) {\n      const commentInput: HTMLInputElement = document.getElementById('commentInput') as HTMLInputElement;\n      commentInput.value = '';\n    } else {\n      this.taskService.createComment(this.taskcard._id, this.username, message, new Date()).subscribe(next => {\n        let newComment = next as Comment;\n        this.comments.unshift(newComment);\n        const commentInput: HTMLInputElement = document.getElementById('commentInput') as HTMLInputElement;\n      commentInput.value = '';\n      })\n    }\n    \n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent) {\n    const navDropdown: HTMLDivElement = document.getElementById(\"navbarDropdown\") as HTMLDivElement;\n    if (navDropdown) {\n      if(event.target == document.getElementById(\"navbarButton\")) {\n        if (navDropdown.classList.contains('is-active')){\n          navDropdown.classList.remove('is-active')\n        } else {\n          navDropdown.classList.add('is-active')\n        }\n      } else {\n        if (navDropdown.classList.contains('is-active')) {\n          navDropdown.classList.remove('is-active')\n        }\n      }\n    }\n    \n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Kanbanize\n      \n    \n    \n      \n        {{\n          username\n        }}\n        \n          Log Out\n        \n      \n    \n  \n\n  \n    \n      \n        Task\n        \n          Title\n          {{ taskcard.title }}\n        \n        \n          Description\n          {{ taskcard.description }}\n        \n        \n          Assigned to\n          {{ taskcard.assignedTo }}\n        \n        \n          Due Date\n          {{ taskcard.dueDate | date:'dd/MM/yyyy' }}\n        \n        Back to board\n      \n      \n        \n          Comments\n        \n        \n        \n           \n          \n            \n              {{ comment.message }}\n            \n            \n              {{ comment.username }}\n              {{ comment.date | date:'dd/MM/yyyy HH:mm:ss' }}\n            \n          \n          No comments yet!\n        \n        \n        \n        \n          \n            \n          \n          \n            Comment\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Kanbanize                            {{          username        }}                  Log Out                                        Task                  Title          {{ taskcard.title }}                          Description          {{ taskcard.description }}                          Assigned to          {{ taskcard.assignedTo }}                          Due Date          {{ taskcard.dueDate | date:\\'dd/MM/yyyy\\' }}                Back to board                              Comments                                                                       {{ comment.message }}                                      {{ comment.username }}              {{ comment.date | date:\\'dd/MM/yyyy HH:mm:ss\\' }}                                No comments yet!                                                                                      Comment                              '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteBoardComponent.html":{"url":"components/DeleteBoardComponent.html","title":"component - DeleteBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/delete-board/delete-board.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-board\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./delete-board.component.html\n            \n\n\n\n            \n                styleUrl\n                ./delete-board.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                board\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                columnInit\n                            \n                            \n                                deleteBoard\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                taskInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, route: ActivatedRoute, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/delete-board/delete-board.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/delete-board/delete-board.component.ts:68\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/delete-board/delete-board.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnInit\n                        \n                    \n                \n            \n            \n                \ncolumnInit(boardId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/delete-board/delete-board.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                boardId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBoard\n                        \n                    \n                \n            \n            \n                \ndeleteBoard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/delete-board/delete-board.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/delete-board/delete-board.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/delete-board/delete-board.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/delete-board/delete-board.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskInit\n                        \n                    \n                \n            \n            \n                \ntaskInit(column: Column)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/delete-board/delete-board.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                column\n                                            \n                                                            Column\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        board\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Board\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/delete-board/delete-board.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/delete-board/delete-board.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { TaskService } from '../../task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Board } from '../../models/board.model';\nimport { Column } from '../../models/column.model';\nimport { TaskCard } from '../../models/taskcard.model';\nimport { AuthService } from '../../auth.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-delete-board',\n  templateUrl: './delete-board.component.html',\n  styleUrl: './delete-board.component.scss'\n})\nexport class DeleteBoardComponent implements OnInit{\n  username!: string;\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router, private authService: AuthService ) {}\n\n  board!: Board;\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.taskService.getBoard(params['boardId']).subscribe(next => {\n          this.board = next as Board\n          this.columnInit(this.board._id)\n        })\n      }\n    )\n    this.authService.getUsername().subscribe(next => {\n      this.username = (next as User).username\n    })\n  }\n\n  columnInit(boardId:string) {\n    this.taskService.getColumns(boardId).subscribe(next => {\n      this.board.columns = (next as Column[]).sort((a,b) => a.position.valueOf() - b.position.valueOf());\n      for (var column of this.board.columns) {\n        this.taskInit(column);\n      }\n    })\n  }\n  taskInit(column: Column) { \n    this.taskService.getTaskCards(column._id).subscribe(next => {\n      column.taskcards = (next as TaskCard[]).sort((a,b) => a.position.valueOf() - b.position.valueOf());\n    })\n  }\n\n  cancel() {\n    this.router.navigate(['/kanban-view', this.board._id]);\n  }\n\n  deleteBoard() {\n    for(var column of this.board.columns) {\n      for(var task of column.taskcards) {\n        this.taskService.deleteTaskCard(task._columnId, task._id).subscribe(() => {});\n      }\n      this.taskService.deleteColumn(column._boardId, column._id).subscribe(() => {})\n    }\n    this.taskService.deleteBoard(this.board._id).subscribe(() => {});\n    this.router.navigate(['project-list']);\n  }\n  \n  logout() {\n    this.authService.logout()\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent) {\n    const navDropdown: HTMLDivElement = document.getElementById(\"navbarDropdown\") as HTMLDivElement;\n    if (navDropdown) {\n      if(event.target == document.getElementById(\"navbarButton\")) {\n        if (navDropdown.classList.contains('is-active')){\n          navDropdown.classList.remove('is-active')\n        } else {\n          navDropdown.classList.add('is-active')\n        }\n      } else {\n        if (navDropdown.classList.contains('is-active')) {\n          navDropdown.classList.remove('is-active')\n        }\n      }\n    }\n    \n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Kanbanize\n      \n    \n    \n      \n        {{ username }}\n        \n          Log Out\n        \n      \n    \n  \n  \n    \n      Delete Board\n      Confirm delete board '{{ board.title }}'?\n      \n      \n      \n        Cancel\n        Delete\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Kanbanize                            {{ username }}                  Log Out                                Delete Board      Confirm delete board \\'{{ board.title }}\\'?                          Cancel        Delete            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeleteBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteTaskComponent.html":{"url":"components/DeleteTaskComponent.html","title":"component - DeleteTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/delete-task/delete-task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-task\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./delete-task.component.html\n            \n\n\n\n            \n                styleUrl\n                ./delete-task.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardId\n                            \n                            \n                                taskcard\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                deleteTaskcard\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, route: ActivatedRoute, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/delete-task/delete-task.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/delete-task/delete-task.component.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/delete-task/delete-task.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTaskcard\n                        \n                    \n                \n            \n            \n                \ndeleteTaskcard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/delete-task/delete-task.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/delete-task/delete-task.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/delete-task/delete-task.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/delete-task/delete-task.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        boardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/delete-task/delete-task.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskcard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskCard\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/delete-task/delete-task.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/delete-task/delete-task.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { TaskService } from '../../task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { TaskCard } from '../../models/taskcard.model';\nimport { AuthService } from '../../auth.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-delete-task',\n  templateUrl: './delete-task.component.html',\n  styleUrl: './delete-task.component.scss'\n})\nexport class DeleteTaskComponent implements OnInit{\n  username!: string;\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router, private authService: AuthService ) {}\n  boardId!: string;\n  taskcard!: TaskCard\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.boardId = params['boardId']\n        this.taskService.getTaskCard(params['columnId'], params['taskcardId']).subscribe(next => {\n          this.taskcard = next as TaskCard;\n          console.log(this.taskcard.title)\n        })\n      }\n    )\n    this.authService.getUsername().subscribe(next => {\n      this.username = (next as User).username\n    })\n  }\n\n  cancel() {\n    this.router.navigate(['/kanban-view', this.boardId]);\n  }\n\n  deleteTaskcard() {\n    this.taskService.deleteTaskCard(this.taskcard._columnId, this.taskcard._id).subscribe(() => {});\n    this.router.navigate(['/kanban-view', this.boardId]);\n  }\n\n  logout() {\n    this.authService.logout()\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent) {\n    const navDropdown: HTMLDivElement = document.getElementById(\"navbarDropdown\") as HTMLDivElement;\n    if (navDropdown) {\n      if(event.target == document.getElementById(\"navbarButton\")) {\n        if (navDropdown.classList.contains('is-active')){\n          navDropdown.classList.remove('is-active')\n        } else {\n          navDropdown.classList.add('is-active')\n        }\n      } else {\n        if (navDropdown.classList.contains('is-active')) {\n          navDropdown.classList.remove('is-active')\n        }\n      }\n    }\n    \n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Kanbanize\n      \n    \n    \n      \n        {{ username }}\n        \n          Log Out\n        \n      \n    \n  \n  \n    \n      Delete Task\n      Confirm delete task '{{ taskcard.title }}'?\n      \n      \n      \n        Cancel\n        Delete\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Kanbanize                            {{ username }}                  Log Out                                Delete Task      Confirm delete task \\'{{ taskcard.title }}\\'?                          Cancel        Delete            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeleteTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditTaskComponent.html":{"url":"components/EditTaskComponent.html","title":"component - EditTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/edit-task/edit-task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-task\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./edit-task.component.html\n            \n\n\n\n            \n                styleUrl\n                ./edit-task.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardId\n                            \n                            \n                                taskcard\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                close\n                            \n                            \n                                dateBoundaryCheck\n                            \n                            \n                                formatDate\n                            \n                            \n                                inputLengthCheck\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, route: ActivatedRoute, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/edit-task/edit-task.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/edit-task/edit-task.component.ts:109\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/edit-task/edit-task.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/edit-task/edit-task.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateBoundaryCheck\n                        \n                    \n                \n            \n            \n                \ndateBoundaryCheck(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/edit-task/edit-task.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatDate\n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/edit-task/edit-task.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputLengthCheck\n                        \n                    \n                \n            \n            \n                \ninputLengthCheck(input: string, length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/edit-task/edit-task.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/edit-task/edit-task.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/edit-task/edit-task.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/edit-task/edit-task.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/edit-task/edit-task.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        boardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/edit-task/edit-task.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskcard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskCard\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/edit-task/edit-task.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/edit-task/edit-task.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { TaskService } from '../../task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { TaskCard } from '../../models/taskcard.model';\nimport { formatDate } from '@angular/common';\nimport { AuthService } from '../../auth.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrl: './edit-task.component.scss'\n})\nexport class EditTaskComponent implements OnInit {\n  username!: string; \n\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router, private authService: AuthService) {}\n\n  boardId!: string;\n  taskcard!: TaskCard;\n  \n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.boardId = params['boardId']\n        this.taskService.getTaskCard(params['columnId'], params['taskcardId']).subscribe(next => {\n          this.taskcard = next as TaskCard;\n          console.log(this.taskcard.title)\n        })\n      }\n    )\n    this.authService.getUsername().subscribe(next => {\n      this.username = (next as User).username\n    })\n  }\n\n  cancel() {\n    this.router.navigate(['/kanban-view', this.boardId]);\n  }\n\n  save() {\n    const titleInput: HTMLInputElement = document.getElementById('taskTitleInput') as HTMLInputElement;\n    const dateInput: HTMLInputElement = document.getElementById('taskDateInput') as HTMLInputElement;\n    const descInput: HTMLInputElement = document.getElementById('taskDescriptionInput') as HTMLInputElement;\n    const date: Date = new Date(dateInput.value)\n    console.log(this.dateBoundaryCheck(date));\n    if (titleInput.value == '') {\n      const titleDialog : HTMLDialogElement = document.getElementById('titleError') as HTMLDialogElement;\n      titleDialog.show();\n    } \n    else if (this.inputLengthCheck(titleInput.value, 50)) {\n      const inputLength50Dialog : HTMLDialogElement = document.getElementById('inputLength50Error') as HTMLDialogElement;\n      inputLength50Dialog.show();\n    }\n    else if (this.inputLengthCheck(descInput.value, 250)) {\n      const inputLength250Dialog : HTMLDialogElement = document.getElementById('inputLength250Error') as HTMLDialogElement;\n      inputLength250Dialog.show();\n    }\n    else if (isNaN(date.getTime())) {\n      const dateDialog : HTMLDialogElement = document.getElementById('dateError') as HTMLDialogElement;\n      dateDialog.show();\n    }\n    else if (this.dateBoundaryCheck(date)) {\n      const dateDialog : HTMLDialogElement = document.getElementById('dateError') as HTMLDialogElement;\n      dateDialog.show();\n    }\n    else {\n      this.taskService.updateTaskCardDetails(this.taskcard._columnId, this.taskcard._id, titleInput.value, descInput.value, date).subscribe(() => {});\n    this.router.navigate(['/kanban-view', this.boardId]);\n    }\n  }\n\n  close() {\n    const titleDialog : HTMLDialogElement = document.getElementById('titleError') as HTMLDialogElement;\n    const inputLength250Dialog : HTMLDialogElement = document.getElementById('inputLength250Error') as HTMLDialogElement;\n    const inputLength50Dialog : HTMLDialogElement = document.getElementById('inputLength50Error') as HTMLDialogElement;\n    const dateDialog : HTMLDialogElement = document.getElementById('dateError') as HTMLDialogElement;\n    titleDialog.close();\n    inputLength250Dialog.close();\n    inputLength50Dialog.close();\n    dateDialog.close()\n    \n  }\n\n  formatDate(date: Date) {\n    return formatDate(date, 'yyyy-MM-dd', 'en-GB');\n  }\n\n  inputLengthCheck(input: string, length: number) {\n    if (input.length > length) {\n      return true;\n    } else return false;\n  }\n\n  dateBoundaryCheck(date: Date) {\n    let dateObj = new Date(date.toDateString());\n    let today = new Date(new Date().toDateString())\n    let before = dateObj  today;\n    return before || after\n  }\n  \n  logout() {\n    this.authService.logout()\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent) {\n    const navDropdown: HTMLDivElement = document.getElementById(\"navbarDropdown\") as HTMLDivElement;\n    if (navDropdown) {\n      if(event.target == document.getElementById(\"navbarButton\")) {\n        if (navDropdown.classList.contains('is-active')){\n          navDropdown.classList.remove('is-active')\n        } else {\n          navDropdown.classList.add('is-active')\n        }\n      } else {\n        if (navDropdown.classList.contains('is-active')) {\n          navDropdown.classList.remove('is-active')\n        }\n      }\n    }\n    \n  }\n}\n\n    \n\n    \n        \n  \n    Error\n    \n      Input a title!\n    \n    Ok\n  \n\n\n  \n    Error\n    \n      Limit your input to 250 characters!\n    \n    Ok\n  \n\n\n  \n    Error\n    \n      Limit your input to 50 characters!\n    \n    Ok\n  \n\n\n  \n    Error\n    \n      Input a date between today and 2 years later!\n    \n    Ok\n  \n\n\n\n  \n    \n      \n        Kanbanize\n      \n    \n    \n      \n        {{ username }}\n        \n          Log Out\n        \n      \n    \n  \n  \n    \n      Edit Task Details\n      \n        Task Title\n        \n      \n      \n        Task Description\n        \n      \n      \n        Task Due Date\n        \n      \n      \n      \n      \n        Cancel\n        Save\n      \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Error          Input a title!        Ok        Error          Limit your input to 250 characters!        Ok        Error          Limit your input to 50 characters!        Ok        Error          Input a date between today and 2 years later!        Ok                      Kanbanize                            {{ username }}                  Log Out                                Edit Task Details              Task Title                            Task Description                            Task Due Date                                        Cancel        Save              '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/forget-password/forget-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./forget-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forget-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEmail\n                            \n                            \n                                close\n                            \n                            \n                                isValidEmail\n                            \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/forget-password/forget-password.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forget-password/forget-password.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forget-password/forget-password.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \nisValidEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forget-password/forget-password.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forget-password/forget-password.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../../auth.service';\nimport { firstValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrl: './forget-password.component.scss'\n})\nexport class ForgetPasswordComponent {\n\n  constructor(private authService: AuthService) {}\n\n  async send(email: string) {\n    \n    let emailcheck = await this.checkEmail(email)\n    if(!this.isValidEmail(email)) {\n      const invalidEmailDialog : HTMLDialogElement = document.getElementById('invalidEmailError') as HTMLDialogElement;\n      invalidEmailDialog.show();\n    } else if (!emailcheck) {\n      const emailNotInUseDialog : HTMLDialogElement = document.getElementById('emailNotInUseError') as HTMLDialogElement;\n      emailNotInUseDialog.show();\n    } else {\n      const sendButton: HTMLButtonElement = document.getElementById('sendButton') as HTMLButtonElement;\n      sendButton.classList.add('is-loading');\n      this.authService.forgetPassword(email).subscribe ((res: any) => {\n        if (res) {\n          const mainModal: HTMLDivElement = document.getElementById('main') as HTMLDivElement;\n          const subModal: HTMLDivElement = document.getElementById('sub') as HTMLDivElement;\n          mainModal.classList.add('is-hidden');\n          subModal.classList.remove('is-hidden');\n        } else {\n          console.log(res);\n        }\n      })\n    }\n    \n  }\n  async checkEmail(email: string) {\n    const emailcheck$ = this.authService.checkEmail(email);\n    return await firstValueFrom(emailcheck$) as Boolean;\n  }\n  isValidEmail(email: string) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  close() {\n    const invalidEmailDialog : HTMLDialogElement = document.getElementById('invalidEmailError') as HTMLDialogElement;\n    const emailNotInUseDialog : HTMLDialogElement = document.getElementById('emailNotInUseError') as HTMLDialogElement;\n    invalidEmailDialog.close();\n    emailNotInUseDialog.close();\n\n  }\n}\n\n    \n\n    \n        \n  \n    Error\n    \n      Enter a valid email!\n    \n    Ok\n  \n\n  \n    Error\n    \n      No users with email found!\n    \n    Ok\n  \n\n\n  \n    \n      \n        Kanbanize\n      \n    \n  \n  \n    \n      Forgot Password\n      A link will be sent to your email to reset your password.\n      \n  \n      \n      \n      \n        Cancel\n        Send\n        \n      \n  \n    \n    \n      Email Sent!\n      A link to reset your password has been sent to your email.\n      You may close this window.\n      \n      \n        Return to Login\n        \n        \n      \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Error          Enter a valid email!        Ok        Error          No users with email found!        Ok                      Kanbanize                        Forgot Password      A link will be sent to your email to reset your password.                                  Cancel        Send                              Email Sent!      A link to reset your password has been sent to your email.      You may close this window.                    Return to Login                              '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEmail\n                            \n                            \n                                    Async\n                                checkUser\n                            \n                            \n                                close\n                            \n                            \n                                isStrongPassword\n                            \n                            \n                                isValidEmail\n                            \n                            \n                                onLoginButtonClick\n                            \n                            \n                                    Async\n                                onRegisterButtonClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUser(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStrongPassword\n                        \n                    \n                \n            \n            \n                \nisStrongPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \nisValidEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLoginButtonClick\n                        \n                    \n                \n            \n            \n                \nonLoginButtonClick(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onRegisterButtonClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRegisterButtonClick(username: string, email: string, password1: string, password2: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../../auth.service';\nimport { HttpResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { firstValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n\n  constructor(private authService: AuthService, private router: Router){}\n  \n\n  onLoginButtonClick(username: string, password: string) {\n    if (username === '' || password === '') {\n      const emptyFieldDialog : HTMLDialogElement = document.getElementById('emptyFieldError') as HTMLDialogElement;\n      emptyFieldDialog.show();\n    } else {\n      this.authService.login(username, password).subscribe({\n        next: (res: HttpResponse) => {\n          \n          if (res.status === 200) {\n            this.router.navigate(['/project-list']);\n          }\n  \n          console.log(res);\n        },\n        error: () => {\n            const invalidLoginDialog : HTMLDialogElement = document.getElementById('invalidLoginError') as HTMLDialogElement;\n            invalidLoginDialog.show();\n        }\n      })\n    }\n    \n  }\n\n  async onRegisterButtonClick(username: string, email: string, password1: string, password2: string) {\n    \n    let usercheck = await this.checkUser(username);\n    let emailcheck = await this.checkEmail(email);\n    \n    if (username === '' || email === '' || password1 === '' || password2 === '') {\n      const emptyFieldDialog : HTMLDialogElement = document.getElementById('emptyFieldError') as HTMLDialogElement;\n      emptyFieldDialog.show();\n    } else if(usercheck) {\n      const userTakenDialog : HTMLDialogElement = document.getElementById('userTakenError') as HTMLDialogElement;\n      userTakenDialog.show();\n    } else if (!this.isValidEmail(email)) {\n      const emailInvalidDialog : HTMLDialogElement = document.getElementById('emailInvalidError') as HTMLDialogElement;\n      emailInvalidDialog.show();\n    } else if (emailcheck) {\n      const emailTakenDialog : HTMLDialogElement = document.getElementById('emailTakenError') as HTMLDialogElement;\n      emailTakenDialog.show();\n    } else if (!this.isStrongPassword(password1)) {\n      const passwordStrengthDialog : HTMLDialogElement = document.getElementById('passwordStrengthError') as HTMLDialogElement;\n      passwordStrengthDialog.show();\n    } else if (password1 !== password2) {\n      const passwordMismatchDialog : HTMLDialogElement = document.getElementById('passwordMismatchError') as HTMLDialogElement;\n      passwordMismatchDialog.show();\n    } else {\n      //register the user and log in\n      this.authService.signup(username, email, password1).subscribe((res: HttpResponse) => {\n      \n        if (res.status === 200) {\n          this.router.navigate(['/project-list']);\n        }\n        console.log(res);\n      });\n    }\n\n    \n  }\n\n  close() {\n    const emptyFieldDialog : HTMLDialogElement = document.getElementById('emptyFieldError') as HTMLDialogElement;\n    const userTakenDialog : HTMLDialogElement = document.getElementById('userTakenError') as HTMLDialogElement;\n    const emailInvalidDialog : HTMLDialogElement = document.getElementById('emailInvalidError') as HTMLDialogElement;\n    const emailTakenDialog : HTMLDialogElement = document.getElementById('emailTakenError') as HTMLDialogElement;\n    const passwordStrengthDialog : HTMLDialogElement = document.getElementById('passwordStrengthError') as HTMLDialogElement;\n    const passwordMismatchDialog : HTMLDialogElement = document.getElementById('passwordMismatchError') as HTMLDialogElement;\n    const invalidLoginDialog : HTMLDialogElement = document.getElementById('invalidLoginError') as HTMLDialogElement;\n    \n    \n    emptyFieldDialog.close();\n    userTakenDialog.close();\n    emailInvalidDialog.close();\n    emailTakenDialog.close();\n    passwordStrengthDialog.close();\n    passwordMismatchDialog.close();\n    invalidLoginDialog.close();\n  }\n\n  async checkUser(username: string) {\n    const usercheck$ = this.authService.checkUser(username);\n    return await firstValueFrom(usercheck$) as Boolean;\n    \n  }\n\n  async checkEmail(email: string) {\n    const emailcheck$ = this.authService.checkEmail(email);\n    return await firstValueFrom(emailcheck$) as Boolean;\n  }\n\n  isStrongPassword(password: string) {\n    const hasLowercase = /[a-z]/.test(password);\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasNumber = /[0-9]/.test(password);\n    const minLength = password.length >= 8;\n\n    return (\n      hasLowercase &&\n      hasUppercase &&\n      hasNumber &&\n      minLength\n    );\n  }\n\n  isValidEmail(email: string) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n}\n\n    \n\n    \n        \n  \n    Error\n    Fill up all fields!\n    Ok\n  \n\n\n  \n    Error\n    Username already taken!\n    Ok\n  \n\n\n  \n    Error\n    Enter a valid email address!\n    Ok\n  \n\n\n  \n    Error\n    Email address already taken!\n    Ok\n  \n\n\n  \n    Error\n    Password not strong enough!\n    Password should include numbers, uppercase and lowercase letters and should have at least 8 characters.\n    Ok\n  \n\n\n  \n    Error\n    Passwords do not match!\n    Ok\n  \n\n\n  \n    Error\n    There was a problem with your login.\n    Please check your username and password and try again.\n    Ok\n  \n\n\n  \n    \n      \n        Kanbanize\n      \n    \n  \n  \n    \n      \n\n      \n        Login\n        \n        \n        \n          Login\n        \n        Forgot Password? Click here\n      \n      \n        Sign Up\n        \n        \n        \n        \n        \n          Register\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Error    Fill up all fields!    Ok        Error    Username already taken!    Ok        Error    Enter a valid email address!    Ok        Error    Email address already taken!    Ok        Error    Password not strong enough!    Password should include numbers, uppercase and lowercase letters and should have at least 8 characters.    Ok        Error    Passwords do not match!    Ok        Error    There was a problem with your login.    Please check your username and password and try again.    Ok                      Kanbanize                                      Login                                  Login                Forgot Password? Click here                    Sign Up                                                  Register                    '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewProjectComponent.html":{"url":"components/NewProjectComponent.html","title":"component - NewProjectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewProjectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/new-project/new-project.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-project\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./new-project.component.html\n            \n\n\n\n            \n                styleUrl\n                ./new-project.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                createProject\n                            \n                            \n                                initColumns\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/new-project/new-project.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-project/new-project.component.ts:60\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-project/new-project.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createProject\n                        \n                    \n                \n            \n            \n                \ncreateProject(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-project/new-project.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initColumns\n                        \n                    \n                \n            \n            \n                \ninitColumns(boardId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-project/new-project.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                boardId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-project/new-project.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-project/new-project.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/new-project/new-project.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/new-project/new-project.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { TaskService } from '../../task.service';\nimport { Router } from '@angular/router';\nimport { Board } from '../../models/board.model';\nimport { AuthService } from '../../auth.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-new-project',\n  templateUrl: './new-project.component.html',\n  styleUrl: './new-project.component.scss'\n})\nexport class NewProjectComponent implements OnInit{\n\n  constructor(private taskService: TaskService, private router: Router, private authService: AuthService) {  }\n  username!: string;\n  ngOnInit() { \n    \n    this.authService.getUsername().subscribe(next => {\n      this.username = (next as User).username\n    })\n  }\n\n  createProject(title: string) {\n    if (title === '') {\n      const titleDialog : HTMLDialogElement = document.getElementById('titleError') as HTMLDialogElement;\n      titleDialog.show();\n    }\n    else {\n      this.taskService.createBoard(title).subscribe(next => {\n      const board: Board = next as Board;\n      console.log(board);\n      this.initColumns(board._id)\n      //change this to /kanban-view/board._id\n      this.router.navigate(['/project-list'])\n      });\n    }\n    \n  }\n  \n  initColumns(boardId: string) {\n    this.taskService.createColumn(boardId, \"To Do\", 0).subscribe(() => {});\n    this.taskService.createColumn(boardId, \"In Progress\", 1).subscribe(() => {});\n    this.taskService.createColumn(boardId, \"Needs Review\", 2).subscribe(() => {});\n    this.taskService.createColumn(boardId, \"Completed\", 3).subscribe(() => {});\n  }\n\n  logout() {\n    this.authService.logout()\n  }\n\n  close() {\n    const titleDialog : HTMLDialogElement = document.getElementById('titleError') as HTMLDialogElement;\n  \n    titleDialog.close();\n    \n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent) {\n    const navDropdown: HTMLDivElement = document.getElementById(\"navbarDropdown\") as HTMLDivElement;\n    if (navDropdown) {\n      if(event.target == document.getElementById(\"navbarButton\")) {\n        if (navDropdown.classList.contains('is-active')){\n          navDropdown.classList.remove('is-active')\n        } else {\n          navDropdown.classList.add('is-active')\n        }\n      } else {\n        if (navDropdown.classList.contains('is-active')) {\n          navDropdown.classList.remove('is-active')\n        }\n      }\n    }\n    \n  }\n}\n\n    \n\n    \n        \n  \n    Error\n    \n      Input a title!\n    \n    Ok\n  \n\n\n  \n    \n      \n        Kanbanize\n      \n    \n    \n      \n        {{ username }}\n        \n          Log Out\n        \n      \n    \n  \n  \n    \n      Create a new project\n  \n      \n      \n      \n        Cancel\n        Create\n        \n      \n    \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Error          Input a title!        Ok                      Kanbanize                            {{ username }}                  Log Out                                Create a new project                            Cancel        Create                          '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewProjectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewTaskComponent.html":{"url":"components/NewTaskComponent.html","title":"component - NewTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/new-task/new-task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-task\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./new-task.component.html\n            \n\n\n\n            \n                styleUrl\n                ./new-task.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardId\n                            \n                            \n                                column\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                close\n                            \n                            \n                                createTask\n                            \n                            \n                                dateBoundaryCheck\n                            \n                            \n                                inputLengthCheck\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, route: ActivatedRoute, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/new-task/new-task.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-task/new-task.component.ts:104\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-task/new-task.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-task/new-task.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTask\n                        \n                    \n                \n            \n            \n                \ncreateTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-task/new-task.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateBoundaryCheck\n                        \n                    \n                \n            \n            \n                \ndateBoundaryCheck(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-task/new-task.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputLengthCheck\n                        \n                    \n                \n            \n            \n                \ninputLengthCheck(input: string, length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-task/new-task.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-task/new-task.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/new-task/new-task.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/new-task/new-task.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        boardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/new-task/new-task.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        column\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Column\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/new-task/new-task.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/new-task/new-task.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { TaskService } from '../../task.service';\nimport { ActivatedRoute, Params, Router} from '@angular/router';\nimport { Column } from '../../models/column.model';\nimport { TaskCard } from '../../models/taskcard.model';\nimport { AuthService } from '../../auth.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.component.html',\n  styleUrl: './new-task.component.scss'\n})\nexport class NewTaskComponent implements OnInit{\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router, private authService: AuthService) {}\n\n  boardId!: string;\n  column!: Column;\n  username!: string;\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.boardId = params['boardId']\n        this.taskService.getColumn(this.boardId, params['columnId']).subscribe(next => {\n          this.column = next as Column;\n          this.taskService.getTaskCards(this.column._id).subscribe(next => {\n            this.column.taskcards = next as TaskCard[];\n          })\n        })\n      }\n    )\n    this.authService.getUsername().subscribe(next => {\n      this.username = (next as User).username\n    })\n  }\n\n  createTask() {\n    const titleInput: HTMLInputElement = document.getElementById('taskTitleInput') as HTMLInputElement;\n    const dateInput: HTMLInputElement = document.getElementById('taskDateInput') as HTMLInputElement;\n    const descInput: HTMLInputElement = document.getElementById('taskDescriptionInput') as HTMLInputElement;\n    const date: Date = new Date(dateInput.value)\n    if (titleInput.value == '') {\n      const titleDialog : HTMLDialogElement = document.getElementById('titleError') as HTMLDialogElement;\n      titleDialog.show();\n    } \n    else if (this.inputLengthCheck(titleInput.value, 50)) {\n      const inputLength50Dialog : HTMLDialogElement = document.getElementById('inputLength50Error') as HTMLDialogElement;\n      inputLength50Dialog.show();\n    }\n    else if (this.inputLengthCheck(descInput.value, 250)) {\n      const inputLength250Dialog : HTMLDialogElement = document.getElementById('inputLength250Error') as HTMLDialogElement;\n      inputLength250Dialog.show();\n    }\n    else if (isNaN(date.getTime())) {\n      const dateDialog : HTMLDialogElement = document.getElementById('dateError') as HTMLDialogElement;\n      dateDialog.show();\n    }\n    else if (this.dateBoundaryCheck(date)) {\n      const dateDialog : HTMLDialogElement = document.getElementById('dateError') as HTMLDialogElement;\n      dateDialog.show();\n    }\n    else {\n      this.taskService.createTaskCard(this.column._id, titleInput.value, descInput.value, new Number(this.column.taskcards.length), date).subscribe(() => {});\n    this.router.navigate(['/kanban-view', this.boardId]);\n    }\n  }\n\n  dateBoundaryCheck(date: Date) {\n    let dateObj = new Date(date.toDateString());\n    let today = new Date(new Date().toDateString())\n    let before = dateObj  today;\n    return before || after\n  }\n\n  cancel() {\n    this.router.navigate(['/kanban-view', this.boardId]);\n  }\n\n  close() {\n    const titleDialog : HTMLDialogElement = document.getElementById('titleError') as HTMLDialogElement;\n    const inputLength250Dialog : HTMLDialogElement = document.getElementById('inputLength250Error') as HTMLDialogElement;\n    const inputLength50Dialog : HTMLDialogElement = document.getElementById('inputLength50Error') as HTMLDialogElement;\n    const dateDialog : HTMLDialogElement = document.getElementById('dateError') as HTMLDialogElement;\n    titleDialog.close();\n    inputLength250Dialog.close();\n    inputLength50Dialog.close();\n    dateDialog.close()\n  }\n  \n  inputLengthCheck(input: string, length: number) {\n    if (input.length > length) {\n      return true;\n    } else return false;\n  }\n\n  logout() {\n    this.authService.logout()\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent) {\n    const navDropdown: HTMLDivElement = document.getElementById(\"navbarDropdown\") as HTMLDivElement;\n    if (navDropdown) {\n      if(event.target == document.getElementById(\"navbarButton\")) {\n        if (navDropdown.classList.contains('is-active')){\n          navDropdown.classList.remove('is-active')\n        } else {\n          navDropdown.classList.add('is-active')\n        }\n      } else {\n        if (navDropdown.classList.contains('is-active')) {\n          navDropdown.classList.remove('is-active')\n        }\n      }\n    }\n    \n  }\n}\n\n    \n\n    \n        \n  \n    Error\n    \n      Input a title!\n    \n    Ok\n  \n\n\n  \n    Error\n    \n      Limit your input to 250 characters!\n    \n    Ok\n  \n\n\n  \n    Error\n    \n      Limit your input to 50 characters!\n    \n    Ok\n  \n\n\n  \n    Error\n    \n      Input a date between today and 2 years later!\n    \n    Ok\n  \n\n\n  \n    \n      \n        Kanbanize\n      \n    \n    \n      \n        {{ username }}\n        \n          Log Out\n        \n      \n    \n  \n  \n    \n      Create a new task\n      \n        Task Title\n        \n      \n      \n        Task Description\n        \n      \n      \n        Task Due Date\n        \n      \n      \n      \n      \n        Cancel\n        \n          Create\n        \n      \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Error          Input a title!        Ok        Error          Limit your input to 250 characters!        Ok        Error          Limit your input to 50 characters!        Ok        Error          Input a date between today and 2 years later!        Ok                      Kanbanize                            {{ username }}                  Log Out                                Create a new task              Task Title                            Task Description                            Task Due Date                                        Cancel                  Create                      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectListComponent.html":{"url":"components/ProjectListComponent.html","title":"component - ProjectListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/project-list/project-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-list\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./project-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boards\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, route: ActivatedRoute, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/project-list/project-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/project-list/project-list.component.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/project-list/project-list.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/project-list/project-list.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/project-list/project-list.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        boards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Board[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/project-list/project-list.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/project-list/project-list.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { Board } from '../../models/board.model';\nimport { TaskService } from '../../task.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../auth.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-project-list',\n  templateUrl: './project-list.component.html',\n  styleUrl: './project-list.component.scss'\n})\nexport class ProjectListComponent implements OnInit{\n  boards!: Board[];\n  username!: string;\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private authService: AuthService) {}\n\n  ngOnInit() { \n    this.taskService.getBoards().subscribe(next => {\n      this.boards = next as Board[];\n\n    })\n    this.authService.getUsername().subscribe(next => {\n      this.username = (next as User).username\n    })\n  }\n  logout() {\n    this.authService.logout()\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent) {\n    const navDropdown: HTMLDivElement = document.getElementById(\"navbarDropdown\") as HTMLDivElement;\n    if (navDropdown) {\n      if(event.target == document.getElementById(\"navbarButton\")) {\n        if (navDropdown.classList.contains('is-active')){\n          navDropdown.classList.remove('is-active')\n        } else {\n          navDropdown.classList.add('is-active')\n        }\n      } else {\n        if (navDropdown.classList.contains('is-active')) {\n          navDropdown.classList.remove('is-active')\n        }\n      }\n    }\n    \n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                Kanbanize\n            \n        \n        \n            \n              {{ username }}\n              \n                Log Out\n              \n            \n          \n    \n    \n        \n             \n                \n                    Projects\n                \n    \n                \n                \n                    \n                        \n                            {{project.title}}\n                        \n                        You have no projects! Create a new project to get started.\n                    \n                \n    \n                + New Project\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Kanbanize                                                      {{ username }}                              Log Out                                                                                                     Projects                                                                                                                            {{project.title}}                                                You have no projects! Create a new project to get started.                                                        + New Project                        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                isStrongPassword\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/reset-password/reset-password.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/reset-password/reset-password.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStrongPassword\n                        \n                    \n                \n            \n            \n                \nisStrongPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/reset-password/reset-password.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/reset-password/reset-password.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/reset-password/reset-password.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(password1: string, password2: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/reset-password/reset-password.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/reset-password/reset-password.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss'\n})\nexport class ResetPasswordComponent implements OnInit{\n\n  constructor(private route: ActivatedRoute, private authService: AuthService) { }\n  token!: string;\n  ngOnInit(){\n      this.route.params.subscribe((params: Params) => {\n        if (params['token'] != undefined) {\n          this.token = params['token'];\n        }\n      })\n  }\n\n  resetPassword(password1: string, password2: string){\n    if (!this.isStrongPassword(password1)) {\n      const passwordStrengthDialog : HTMLDialogElement = document.getElementById('passwordStrengthError') as HTMLDialogElement;\n      passwordStrengthDialog.show();\n    } else if (password1 !== password2) {\n      const passwordMismatchDialog : HTMLDialogElement = document.getElementById('passwordMismatchError') as HTMLDialogElement;\n      passwordMismatchDialog.show();\n    } else {\n      const confirmButton: HTMLButtonElement = document.getElementById('confirmButton') as HTMLButtonElement;\n      confirmButton.classList.add('is-loading');\n      this.reset(password1)\n      \n    }\n    \n  }\n\n  reset(password: string) {\n    \n    this.authService.resetPassword(this.token, password).subscribe((res: any) => {\n      if(res) {\n        const mainModal: HTMLDivElement = document.getElementById('main') as HTMLDivElement;\n          const subModal: HTMLDivElement = document.getElementById('sub') as HTMLDivElement;\n          mainModal.classList.add('is-hidden');\n          subModal.classList.remove('is-hidden');\n      } else {\n        console.log(res);\n        \n      }\n    })\n  }\n\n  close() {\n    const passwordStrengthDialog : HTMLDialogElement = document.getElementById('passwordStrengthError') as HTMLDialogElement;\n    const passwordMismatchDialog : HTMLDialogElement = document.getElementById('passwordMismatchError') as HTMLDialogElement;\n    passwordStrengthDialog.close();\n    passwordMismatchDialog.close();\n  }\n\n  isStrongPassword(password: string) {\n    const hasLowercase = /[a-z]/.test(password);\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasNumber = /[0-9]/.test(password);\n    const minLength = password.length >= 8;\n\n    return (\n      hasLowercase &&\n      hasUppercase &&\n      hasNumber &&\n      minLength\n    );\n  }\n}\n\n    \n\n    \n        \n    \n      Error\n      Password not strong enough!\n      Password should include numbers, uppercase and lowercase letters and should have at least 8 characters.\n      Ok\n    \n  \n  \n    \n      Error\n      Passwords do not match!\n      Ok\n    \n  \n\n    \n      \n        \n          Kanbanize\n        \n      \n    \n    \n      \n        Create a new password\n    \n        \n        \n        \n        \n        \n          Cancel\n          Confirm\n          \n        \n      \n      \n      \n        Password Reset!\n        Your password has been successfully reset.\n        Please log in with your updated credentials.\n        \n        \n          Return to Login\n          \n          \n        \n      \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Error      Password not strong enough!      Password should include numbers, uppercase and lowercase letters and should have at least 8 characters.      Ok                  Error      Passwords do not match!      Ok                                  Kanbanize                                    Create a new password                                                      Cancel          Confirm                                            Password Reset!        Your password has been successfully reset.        Please log in with your updated credentials.                          Return to Login                                            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskCard.html":{"url":"classes/TaskCard.html","title":"class - TaskCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/taskcard.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _columnId\n                            \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                assignedTo\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                dueDate\n                            \n                            \n                                    Public\n                                position\n                            \n                            \n                                    Public\n                                priority\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_id: string, _columnId: string, title: string, description: string, position: Number, dueDate: Date, priority: Boolean, assignedTo: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/taskcard.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _columnId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        position\n                                                  \n                                                        \n                                                                        Number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dueDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        priority\n                                                  \n                                                        \n                                                                        Boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assignedTo\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _columnId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/taskcard.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/taskcard.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        assignedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/taskcard.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/taskcard.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/taskcard.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/taskcard.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/taskcard.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/taskcard.model.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TaskCard {\n  constructor(\n    public _id: string,\n    public _columnId: string,\n    public title: string,\n    public description: string,\n    public position: Number,\n    public dueDate: Date,\n    public priority: Boolean,\n    public assignedTo: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_id: string, username: string, email: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    constructor(\n      public _id: string,\n      \n      public username: string,\n      public email: string\n      \n    ) {}\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewUsersComponent.html":{"url":"components/ViewUsersComponent.html","title":"component - ViewUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/view-users/view-users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-users\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./view-users.component.html\n            \n\n\n\n            \n                styleUrl\n                ./view-users.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userIds\n                            \n                            \n                                username\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                usersInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, router: Router, authService: AuthService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/view-users/view-users.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/view-users/view-users.component.ts:58\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/view-users/view-users.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/view-users/view-users.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/view-users/view-users.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/view-users/view-users.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersInit\n                        \n                    \n                \n            \n            \n                \nusersInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/view-users/view-users.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/view-users/view-users.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/view-users/view-users.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/view-users/view-users.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { TaskService } from '../../task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { AuthService } from '../../auth.service';\nimport { Board } from '../../models/board.model';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-view-users',\n  templateUrl: './view-users.component.html',\n  styleUrl: './view-users.component.scss'\n})\nexport class ViewUsersComponent implements OnInit{\n  constructor(private taskService: TaskService, private router: Router, private authService: AuthService, private route: ActivatedRoute) {  }\n\n  username!: string;\n\n  userIds!: any[];\n\n  users: User[] = [];\n\n  ngOnInit() { \n    this.route.params.subscribe(\n      (params: Params) => {\n        this.taskService.getUsers(params['boardId']).subscribe(next => {\n          this.userIds = next as string[];\n          this.usersInit()\n        })\n      }\n    )\n    this.authService.getUsername().subscribe(next => {\n      this.username = (next as User).username\n    })\n  }\n\n  usersInit() {\n    for (var id of this.userIds) {\n      this.authService.getUsernameWithId(id['_userId']).subscribe(next => {\n        let user = next as User\n        this.users.push(user);\n        \n      })\n    }\n  }\n\n  cancel() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.router.navigate(['/kanban-view', params['boardId']]);\n      }\n    )\n  }\n  logout() {\n    this.authService.logout()\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent) {\n    const navDropdown: HTMLDivElement = document.getElementById(\"navbarDropdown\") as HTMLDivElement;\n    if (navDropdown) {\n      if(event.target == document.getElementById(\"navbarButton\")) {\n        if (navDropdown.classList.contains('is-active')){\n          navDropdown.classList.remove('is-active')\n        } else {\n          navDropdown.classList.add('is-active')\n        }\n      } else {\n        if (navDropdown.classList.contains('is-active')) {\n          navDropdown.classList.remove('is-active')\n        }\n      }\n    }\n    \n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n          Kanbanize\n        \n      \n      \n        \n          {{ username }}\n          \n            Log Out\n          \n        \n      \n    \n    \n      \n        View Users\n\n        {{ user.username }}\n        \n        \n        \n          Return to Board\n        \n      \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Kanbanize                                      {{ username }}                      Log Out                                              View Users        {{ user.username }}                                  Return to Board                        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AssignComponent', 'selector': 'app-assign'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'DeleteBoardComponent', 'selector': 'app-delete-board'},{'name': 'DeleteTaskComponent', 'selector': 'app-delete-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'KanbanViewComponent', 'selector': 'app-kanban-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewProjectComponent', 'selector': 'app-new-project'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ViewUsersComponent', 'selector': 'app-view-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/WebReqInterceptor.html":{"url":"interceptors/WebReqInterceptor.html","title":"interceptor - WebReqInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  WebReqInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/web-req.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessTokenRefreshed\n                            \n                            \n                                refreshingAccessToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthHeader\n                            \n                            \n                                intercept\n                            \n                            \n                                refreshAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/web-req.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAuthHeader\n                        \n                    \n                \n            \n            \n                \naddAuthHeader(request: HttpRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web-req.interceptor.ts:91\n                        \n                    \n\n\n            \n                \n                        Adds headers to the request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Outgoing request\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                request\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web-req.interceptor.ts:30\n                        \n                    \n\n\n            \n                \n                        Intercepts outgoing HTTP requests and attaches UserId and access token to the header.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Outgoing HTTP request\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HttpHandler\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                request\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshAccessToken\n                        \n                    \n                \n            \n            \n                \nrefreshAccessToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web-req.interceptor.ts:64\n                        \n                    \n\n\n            \n                \n                        Checks if an ongoing access token refresh is taking place and starts one if not.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Access Token\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessTokenRefreshed\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/web-req.interceptor.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshingAccessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/web-req.interceptor.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, Observable, Subject, catchError, switchMap, tap, throwError } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * \n * This interceptor checks the validity of the access token and is also responsible for initiating the refresh process.\n * This web request interceptor implements HttpInterceptor.\n * \n */\nexport class WebReqInterceptor implements HttpInterceptor{\n\n  constructor(private authService: AuthService) { }\n\n  refreshingAccessToken!: Boolean;\n\n  accessTokenRefreshed: Subject = new Subject();\n\n  /**\n   * Intercepts outgoing HTTP requests and attaches UserId and access token to the header.\n   * @param request Outgoing HTTP request\n   * @param next HttpHandler\n   * @returns request\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable {\n    request = this.addAuthHeader(request);\n      \n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n        if (error.status === 401) {\n          //unauthorised\n\n          //refresh\n          return this.refreshAccessToken().pipe(\n            switchMap(() => {\n              request = this.addAuthHeader(request);\n              return next.handle(request);\n            }),\n            catchError((err: any) => {\n              console.log(err);\n              \n              this.authService.logout();\n              return EMPTY;\n            })\n          )\n        } \n        return throwError(() => {\n          error\n        });\n      })\n    )\n  }\n\n  /**\n   * Checks if an ongoing access token refresh is taking place and starts one if not.\n   * @returns Access Token\n   */\n  refreshAccessToken() {\n    if (this.refreshingAccessToken) {\n      return new Observable(observer => {\n        this.accessTokenRefreshed.subscribe(() => {\n          //run when access token refreshed\n          observer.next();\n          observer.complete();\n        })\n      })\n    } else {\n      this.refreshingAccessToken = true;\n      return this.authService.getNewAccessToken().pipe(\n        tap(() => {\n          this.refreshingAccessToken = false;\n          this.accessTokenRefreshed.next();\n          console.log('access token refreshed!');\n        })\n      )\n    }\n    \n  }\n  \n  /**\n   * Adds headers to the request.\n   * @param request Outgoing request\n   * @returns request\n   */\n  addAuthHeader(request: HttpRequest) {\n    const token = this.authService.getAccessToken();\n\n    if (token) {\n      return request.clone({\n        setHeaders: {\n          'x-access-token': token\n        }\n      })\n    }\n    return request;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebRequestService.html":{"url":"injectables/WebRequestService.html","title":"injectable - WebRequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebRequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/web-request.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ROOT_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkEmail\n                            \n                            \n                                checkUser\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getUsername\n                            \n                            \n                                login\n                            \n                            \n                                patch\n                            \n                            \n                                post\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/web-request.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web-request.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkUser\n                        \n                    \n                \n            \n            \n                \ncheckUser(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web-request.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(uri: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web-request.service.ts:51\n                        \n                    \n\n\n            \n                \n                        DELETE\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    API route\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                API response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(uri: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web-request.service.ts:24\n                        \n                    \n\n\n            \n                \n                        GET\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    API route\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                API response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsername\n                        \n                    \n                \n            \n            \n                \ngetUsername(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web-request.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web-request.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    username\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                API response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patch\n                        \n                    \n                \n            \n            \n                \npatch(uri: string, payload: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web-request.service.ts:42\n                        \n                    \n\n\n            \n                \n                        PATCH\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    API route\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                API response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(uri: string, payload: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web-request.service.ts:33\n                        \n                    \n\n\n            \n                \n                        POST\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    API route\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                API response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web-request.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Signup\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    username\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    email\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                API response\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ROOT_URL\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/web-request.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Contains all the RESTful API methods to backend server.\n */\nexport class WebRequestService {\n\n  readonly ROOT_URL;\n\n  constructor(private http: HttpClient) {\n    this.ROOT_URL= 'http://localhost:3000';\n  }\n\n  /**\n   * GET\n   * @param uri API route\n   * @returns API response\n   */\n  get(uri: string) {\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  /**\n   * POST\n   * @param uri API route\n   * @returns API response\n   */\n  post(uri: string, payload: Object) {\n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n  }\n\n  /**\n   * PATCH\n   * @param uri API route\n   * @returns API response\n   */\n  patch(uri: string, payload: Object) {\n    return this.http.patch(`${this.ROOT_URL}/${uri}`, payload);\n  }\n\n  /**\n   * DELETE\n   * @param uri API route\n   * @returns API response\n   */\n  delete(uri: string) {\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n\n  /**\n   * Login\n   * @param username username\n   * @param password password\n   * @returns API response\n   */\n  login(username: string, password: string) {\n    return this.http.post(`${this.ROOT_URL}/users/login`, {\n      username,\n      password\n    }, { \n      observe: 'response'\n    });\n  }\n\n  /**\n   * Signup\n   * @param username username\n   * @param email email\n   * @param password password\n   * @returns API response\n   */\n  signup(username: string, email: string, password: string) {\n    return this.http.post(`${this.ROOT_URL}/users`, {\n      username,\n      email,\n      password\n    }, { \n      observe: 'response'\n    });\n  }\n\n  \n\n  checkUser(username: string) {\n    return this.http.post(`${this.ROOT_URL}/users/username`, {\n      username\n    })\n  }\n\n  checkEmail(email: string) {\n    return this.http.post(`${this.ROOT_URL}/users/email`, {\n      email\n    })\n  }\n\n  getUsername(userId: string) {\n    return this.http.post(`${this.ROOT_URL}/users/getuser`, {\n      userId\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                src/app/models/board.model.ts\n            \n            class\n            Board\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/column.model.ts\n            \n            class\n            Column\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/comment.model.ts\n            \n            class\n            Comment\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/taskcard.model.ts\n            \n            class\n            TaskCard\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/add-user/add-user.component.ts\n            \n            component\n            AddUserComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/assign/assign.component.ts\n            \n            component\n            AssignComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/pages/comments/comments.component.ts\n            \n            component\n            CommentsComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/delete-board/delete-board.component.ts\n            \n            component\n            DeleteBoardComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/delete-task/delete-task.component.ts\n            \n            component\n            DeleteTaskComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/edit-task/edit-task.component.ts\n            \n            component\n            EditTaskComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/forget-password/forget-password.component.ts\n            \n            component\n            ForgetPasswordComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/kanban-view/kanban-view.component.ts\n            \n            component\n            KanbanViewComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/new-project/new-project.component.ts\n            \n            component\n            NewProjectComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/new-task/new-task.component.ts\n            \n            component\n            NewTaskComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/pages/project-list/project-list.component.ts\n            \n            component\n            ProjectListComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/view-users/view-users.component.ts\n            \n            component\n            ViewUsersComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/task.service.ts\n            \n            injectable\n            TaskService\n            \n                91 %\n                (21/23)\n            \n        \n        \n            \n                \n                src/app/web-req.interceptor.ts\n            \n            interceptor\n            WebReqInterceptor\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/web-request.service.ts\n            \n            injectable\n            WebRequestService\n            \n                50 %\n                (6/12)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.2.0\n        \n            @angular/cdk : ^17.3.0\n        \n            @angular/common : ^17.2.0\n        \n            @angular/compiler : ^17.2.0\n        \n            @angular/core : ^17.2.0\n        \n            @angular/forms : ^17.2.0\n        \n            @angular/platform-browser : ^17.2.0\n        \n            @angular/platform-browser-dynamic : ^17.2.0\n        \n            @angular/router : ^17.2.0\n        \n            bulma : ^0.9.4\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated with Angular CLI version 17.2.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAssignComponent\n\nAssignComponent\n\nAppModule -->\n\nAssignComponent->AppModule\n\n\n\n\n\nCommentsComponent\n\nCommentsComponent\n\nAppModule -->\n\nCommentsComponent->AppModule\n\n\n\n\n\nDeleteBoardComponent\n\nDeleteBoardComponent\n\nAppModule -->\n\nDeleteBoardComponent->AppModule\n\n\n\n\n\nDeleteTaskComponent\n\nDeleteTaskComponent\n\nAppModule -->\n\nDeleteTaskComponent->AppModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nAppModule -->\n\nEditTaskComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nKanbanViewComponent\n\nKanbanViewComponent\n\nAppModule -->\n\nKanbanViewComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNewProjectComponent\n\nNewProjectComponent\n\nAppModule -->\n\nNewProjectComponent->AppModule\n\n\n\n\n\nNewTaskComponent\n\nNewTaskComponent\n\nAppModule -->\n\nNewTaskComponent->AppModule\n\n\n\n\n\nProjectListComponent\n\nProjectListComponent\n\nAppModule -->\n\nProjectListComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nViewUsersComponent\n\nViewUsersComponent\n\nAppModule -->\n\nViewUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWebReqInterceptor\n\nWebReqInterceptor\n\nAppModule -->\n\nWebReqInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        16 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
